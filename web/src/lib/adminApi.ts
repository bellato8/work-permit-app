// ============================================================
// ‡πÑ‡∏ü‡∏•‡πå: web/src/lib/adminApi.ts (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Status Mapping)
// ‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô (Written by): AI Helper
// ‡πÄ‡∏ß‡∏•‡∏≤/‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô: 2025-09-08 ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Status Mapping ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
// ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏û‡∏¥‡πà‡∏° Thai-English status mapping ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Dashboard stats
// ============================================================

// -----------------------------
// ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏®‡∏±‡∏û‡∏ó‡πå (Glossary ‡∏™‡∏±‡πâ‡∏ô ‡πÜ)
// - CORS (‡∏Ñ‡∏≠‡∏£‡πå‡∏™): ‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≤‡∏°‡πÇ‡∏î‡πÄ‡∏°‡∏ô ‡∏ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î CORS ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Proxy (‡∏û‡∏£‡πá‡∏≠‡∏Å‡∏ã‡∏µ‡πà)
// - Proxy (‡∏û‡∏£‡πá‡∏≠‡∏Å‡∏ã‡∏µ‡πà): ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ï‡∏±‡∏ß‡∏Å‡∏•‡∏≤‡∏á ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÅ‡∏ó‡∏ô‡πÄ‡∏£‡∏≤ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤ CORS/‡∏ã‡πà‡∏≠‡∏ô‡πÇ‡∏î‡πÄ‡∏°‡∏ô‡∏à‡∏£‡∏¥‡∏á
// - .env (‡∏î‡∏≠‡∏ó-‡πÄ‡∏≠‡πá‡∏ô‡∏ß‡∏µ): ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô URL/KEY ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏≤‡∏°‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏° dev/prod
// - Status Mapping: ‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏©‡∏≤‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÑ‡∏õ‡∏≠‡∏µ‡∏Å‡∏†‡∏≤‡∏©‡∏≤‡∏´‡∏ô‡∏∂‡πà‡∏á (‡πÑ‡∏ó‡∏¢ ‚Üí ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)
// -----------------------------

// -----------------------------
// ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Types) ‚Äî ‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÑ‡∏°‡πà‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠
// -----------------------------
export type AnyRecord = Record<string, any>;

export interface RequestSummary {
  rid: string; // ‡∏£‡∏´‡∏±‡∏™‡∏Ñ‡∏≥‡∏Ç‡∏≠ ‡πÄ‡∏ä‡πà‡∏ô R20250831-0001
  createdAt?: number; // epoch ms (‡∏à‡∏∞ convert ‡πÄ‡∏≠‡∏á‡∏ï‡∏≤‡∏° UI)
  updatedAt?: number;
  jobType?: string;
  requesterName?: string;
  status?: string; // pending/approved/rejected/... (‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏£‡∏¥‡∏á)
  raw: AnyRecord; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á
}

export interface RequestDetails extends RequestSummary {
  requesterPhone?: string;
  requesterEmail?: string;
  department?: string;
  attachments?: AnyRecord[];
  location?: string;
  startTime?: number;
  endTime?: number;
  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
}

export interface PagedResult<T> {
  items: T[];
  page: number; // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å 1
  pageSize: number;
  total: number; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô items.length (client-side)
}

// -----------------------------
// Status Mapping: ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‚Üí ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
// -----------------------------
const THAI_TO_ENGLISH_STATUS: Record<string, string> = {
  // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡∏ó‡∏µ‡πà‡∏û‡∏ö‡πÉ‡∏ô Firestore
  "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥": "pending",
  "‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥": "pending", 
  "‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠": "pending",
  "‡∏¢‡∏∑‡πà‡∏ô‡∏Ñ‡∏≥‡∏Ç‡∏≠": "pending",
  "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß": "approved",
  "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥": "approved",
  "‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥": "approved",
  "‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï": "approved",
  "‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò": "rejected",
  "‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥": "rejected",
  "‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï": "rejected",
  "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å": "rejected",
  "‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô": "returned",
  "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç": "returned",
  "‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç": "returned",
  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏ú‡∏™‡∏°
  "pending": "pending",
  "approved": "approved", 
  "rejected": "rejected",
  "returned": "returned"
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
function normalizeStatus(rawStatus: any): string {
  if (!rawStatus) return "pending"; // default fallback
  
  const statusStr = String(rawStatus).trim();
  const normalized = THAI_TO_ENGLISH_STATUS[statusStr];
  
  // ‡πÄ‡∏û‡∏¥‡πà‡∏° logging ‡πÄ‡∏û‡∏∑‡πà‡∏≠ debug
  if (normalized !== statusStr) {
    console.log(`üîÑ Status mapping: "${statusStr}" ‚Üí "${normalized || statusStr}"`);
  }
  
  return normalized || statusStr || "pending";
}

// -----------------------------
// ‡∏¢‡∏π‡∏ó‡∏¥‡∏•‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ ENV/LocalStorage
// -----------------------------
const env = (k: string): string | undefined => {
  // Vite ‡∏à‡∏∞‡∏ù‡∏±‡∏á‡∏Ñ‡πà‡∏≤ import.meta.env.VITE_* ‡∏ó‡∏µ‡πà build time
  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡∏•‡∏≠‡∏á‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å localStorage (key ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡πÅ‡∏ï‡πà‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å)
  const v = (import.meta as any).env?.[k] ?? undefined;
  if (v !== undefined && v !== "") return String(v);
  try {
    const ls = localStorage.getItem(k.toLowerCase());
    if (ls) return ls;
  } catch (_) {}
  return undefined;
};

const getAdminKey = (): string | undefined =>
  localStorage.getItem("approver_key") || env("VITE_APPROVER_KEY");

const getRequesterEmail = (): string | undefined =>
  localStorage.getItem("admin_requester_email") || env("VITE_APPROVER_EMAIL");

const getListUrl = (): string | undefined =>
  localStorage.getItem("list_url") || env("VITE_LIST_REQUESTS_ADMIN_URL") || env("VITE_LIST_REQUESTS_URL");

const getDetailsUrl = (): string | undefined =>
  localStorage.getItem("details_url") || env("VITE_GET_REQUEST_ADMIN_URL");

const getProxyListUrl = (): string | undefined => env("VITE_PROXY_LISTREQUESTS_URL");

// -----------------------------
// ‡∏™‡∏£‡πâ‡∏≤‡∏á headers ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
// -----------------------------
export const buildAdminHeaders = (): HeadersInit => {
  const headers: HeadersInit = {
    "Content-Type": "application/json",
  };
  const key = getAdminKey();
  if (key) (headers as any)["x-api-key"] = key;
  const email = getRequesterEmail();
  if (email) (headers as any)["x-requester-email"] = email;
  return headers;
};

// -----------------------------
// ‡∏ï‡∏±‡∏ß‡∏ä‡πà‡∏ß‡∏¢ fetch JSON ‡∏û‡∏£‡πâ‡∏≠‡∏° error handling
// -----------------------------
async function fetchJson<T>(url: string, init?: RequestInit): Promise<T> {
  const res = await fetch(url, init);
  // ‡πÅ‡∏õ‡∏•‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢
  if (!res.ok) {
    let info: any = null;
    try { info = await res.json(); } catch { /* ignore */ }
    const message = info?.error || info?.message || res.statusText;
    if (res.status === 401) throw new Error(`401 Unauthorized: ‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏µ‡∏¢‡πå x-api-key ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‚Äî ${message}`);
    if (res.status === 403) throw new Error(`403 Forbidden: ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ô‡∏µ‡πâ ‚Äî ${message}`);
    if (res.status === 404) throw new Error(`404 Not Found: ‡∏ï‡∏£‡∏ß‡∏à URL/‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á API ‚Äî ${message}`);
    throw new Error(`${res.status} ${res.statusText}: ${message}`);
  }
  return res.json() as Promise<T>;
}

// -----------------------------
// ‡πÅ‡∏õ‡∏•‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ items[] ‡πÅ‡∏ö‡∏ö‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô
// -----------------------------
function extractItems(payload: any): any[] {
  if (!payload) return [];
  if (Array.isArray(payload)) return payload;
  if (Array.isArray(payload?.data?.items)) return payload.data.items;
  if (Array.isArray(payload?.items)) return payload.items;
  // ‡∏Å‡∏£‡∏ì‡∏µ payload.data ‡πÄ‡∏õ‡πá‡∏ô array
  if (Array.isArray(payload?.data)) return payload.data;
  // ‡∏ö‡∏≤‡∏á API ‡∏≠‡∏≤‡∏à‡∏™‡πà‡∏á {data: {list: [...]}}
  if (Array.isArray(payload?.data?.list)) return payload.data.list;
  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏Ñ‡∏™‡πÉ‡∏î‡πÄ‡∏•‡∏¢ ‡∏•‡∏≠‡∏á‡πÄ‡∏î‡∏≤‡∏ß‡πà‡∏≤‡∏°‡∏µ field ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÄ‡∏õ‡πá‡∏ô array
  for (const k of Object.keys(payload)) {
    if (Array.isArray(payload[k])) return payload[k];
  }
  return [];
}

// -----------------------------
// ‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô Summary ‡∏ó‡∏µ‡πà UI ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ (normalize)
// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏û‡∏¥‡πà‡∏° status mapping
// -----------------------------
export function normalizeSummary(raw: AnyRecord): RequestSummary {
  // ‡πÄ‡∏î‡∏≤‡∏£‡∏´‡∏±‡∏™ RID ‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏µ‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢
  const rid = String(
    raw.rid || raw.RID || raw.id || raw.requestId || raw.request_id || raw._id || ""
  );

  const createdAt = toEpoch(raw.createdAt || raw.created_at || raw.created || raw.timestamp || raw.createdTime);
  const updatedAt = toEpoch(raw.updatedAt || raw.updated_at || raw.updated || raw.updateTime);

  // ‡∏ú‡∏π‡πâ‡∏¢‡∏∑‡πà‡∏ô (requester)
  const requesterName =
    raw.requester?.fullname || raw.requester?.name || raw.requesterName || raw.requester_fullname || raw.name ||
    [raw.firstName, raw.lastName].filter(Boolean).join(" ") ||
    undefined;

  // ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô
  const jobType = raw.jobType || raw.type || raw.workType || raw.category || undefined;

  // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏•‡∏±‡∏Å: ‡πÉ‡∏ä‡πâ normalizeStatus ‡πÄ‡∏û‡∏∑‡πà‡∏≠ map ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‚Üí ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
  const rawStatus = raw.status || raw.approvalStatus || raw.state || "pending";
  const status = normalizeStatus(rawStatus);

  return {
    rid,
    createdAt,
    updatedAt,
    requesterName,
    jobType,
    status, // ‚úÖ ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô pending/approved/rejected ‡πÅ‡∏•‡πâ‡∏ß
    raw,
  };
}

function toEpoch(v: any): number | undefined {
  if (!v) return undefined;
  if (typeof v === "number") return v < 2_000_000_000 ? v * 1000 : v; // ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‚Üí‡∏°‡∏¥‡∏•‡∏•‡∏¥‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  if (typeof v === "string") {
    // ‡∏•‡∏≠‡∏á parse ISO/‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
    const t = Date.parse(v);
    if (!Number.isNaN(t)) return t;
    // ‡∏•‡∏≠‡∏á parse ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏ô string
    const n = Number(v);
    if (!Number.isNaN(n)) return n < 2_000_000_000 ? n * 1000 : n;
  }
  if (v?._seconds) return v._seconds * 1000; // Firestore Timestamp
  return undefined;
}

// -----------------------------
// ‡πÄ‡∏û‡∏à‡∏à‡∏¥‡πâ‡∏á‡∏ù‡∏±‡πà‡∏á client (fallback)
// -----------------------------
function paginateClient<T>(items: T[], page: number, pageSize: number): PagedResult<T> {
  const total = items.length;
  const start = (page - 1) * pageSize;
  const end = start + pageSize;
  return { items: items.slice(start, end), page, pageSize, total };
}

// -----------------------------
// listRequestsAdmin: ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏à‡∏à‡∏¥‡πâ‡∏á‡∏ù‡∏±‡πà‡∏á server ‡∏ñ‡πâ‡∏≤‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö ‡∏°‡∏¥‡∏â‡∏∞‡∏ô‡∏±‡πâ‡∏ô‡∏î‡∏∂‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏±‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏≠‡∏á
// ‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö filter/sort ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô
// -----------------------------
export interface ListParams {
  page?: number; // ‡πÄ‡∏£‡∏¥‡πà‡∏° 1
  pageSize?: number; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤
  status?: string; // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: "pending" | "approved" | "rejected"
  q?: string; // ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
  sort?: string; // ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ö backend ‡πÄ‡∏ä‡πà‡∏ô "-createdAt"/"createdAt desc"
  useProxy?: boolean; // ‡πÉ‡∏´‡πâ‡∏•‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ú‡πà‡∏≤‡∏ô proxy (‡∏Å‡∏£‡∏ì‡∏µ‡∏ï‡∏¥‡∏î CORS)
  signal?: AbortSignal;
}

export async function listRequestsAdmin(params: ListParams = {}): Promise<PagedResult<RequestSummary>> {
  const {
    page = 1,
    pageSize = 20,
    status,
    q,
    sort,
    useProxy = false,
    signal,
  } = params;

  const baseUrl = (useProxy ? getProxyListUrl() : undefined) || getListUrl();
  if (!baseUrl) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö listRequestsAdmin ‚Äî ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ VITE_LIST_REQUESTS_ADMIN_URL ‡∏´‡∏£‡∏∑‡∏≠ VITE_LIST_REQUESTS_URL");

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á query string ‡πÅ‡∏ö‡∏ö‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢
  const url = new URL(baseUrl);

  // ‡∏•‡∏≠‡∏á‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏à‡∏à‡∏¥‡πâ‡∏á‡∏Ç‡∏≠‡∏á backend ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
  url.searchParams.set("page", String(page));
  url.searchParams.set("pageSize", String(pageSize));
  // ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏ö‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ä‡πâ limit/offset
  url.searchParams.set("limit", String(pageSize));
  url.searchParams.set("offset", String((page - 1) * pageSize));

  if (status) url.searchParams.set("status", status);
  if (q) url.searchParams.set("q", q);
  if (sort) url.searchParams.set("sort", sort);

  console.log(`üìû Calling API: ${url.toString()}`);

  const payload = await fetchJson<any>(url.toString(), {
    method: "GET",
    headers: buildAdminHeaders(),
    signal,
  }).catch(async (err) => {
    console.log(`‚ùå GET failed, trying POST fallback: ${err.message}`);
    // ‡∏ñ‡πâ‡∏≤‡∏ï‡∏¥‡∏î CORS ‡∏´‡∏£‡∏∑‡∏≠ GET ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡∏•‡∏≠‡∏á POST ‡πÄ‡∏õ‡πá‡∏ô fallback
    const postBody: AnyRecord = { page, pageSize, status, q, sort };
    const postUrl = baseUrl; // POST ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà query
    return fetchJson<any>(postUrl, {
      method: "POST",
      headers: buildAdminHeaders(),
      body: JSON.stringify(postBody),
      signal,
    });
  });

  console.log(`üì¶ API Response:`, payload);

  const itemsRaw = extractItems(payload);
  console.log(`üîç Extracted ${itemsRaw.length} raw items`);

  // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏•‡∏±‡∏Å: ‡πÉ‡∏ä‡πâ normalizeSummary ‡∏ó‡∏µ‡πà‡∏°‡∏µ status mapping ‡πÅ‡∏•‡πâ‡∏ß
  const items = itemsRaw.map(normalizeSummary);
  
  // ‡πÅ‡∏™‡∏î‡∏á status ‡∏´‡∏•‡∏±‡∏á mapping ‡πÄ‡∏û‡∏∑‡πà‡∏≠ debug
  console.log(`üìä Processed items:`, items.map(item => `${item.rid}: ${item.status}`));

  // ‡∏ñ‡πâ‡∏≤ backend ‡πÉ‡∏´‡πâ meta ‡∏°‡∏≤ ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏°‡∏ô‡∏±‡πâ‡∏ô
  const metaTotal = payload?.total ?? payload?.data?.total ?? payload?.count ?? undefined;
  const metaPage = payload?.page ?? payload?.data?.page ?? undefined;
  const metaPageSize = payload?.pageSize ?? payload?.data?.pageSize ?? undefined;

  if (metaTotal && metaPage && metaPageSize) {
    return {
      items,
      page: Number(metaPage) || page,
      pageSize: Number(metaPageSize) || pageSize,
      total: Number(metaTotal),
    };
  }

  // ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ meta ‚Üí ‡πÉ‡∏ä‡πâ client-side ‡πÄ‡∏û‡∏à‡∏à‡∏¥‡πâ‡∏á
  return paginateClient(items, page, pageSize);
}

// -----------------------------
// ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î 1 ‡πÉ‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠ (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö GET ‡πÅ‡∏•‡∏∞ POST)
// -----------------------------
export async function getRequestAdmin(rid: string, signal?: AbortSignal): Promise<RequestDetails> {
  const baseUrl = getDetailsUrl();
  if (!baseUrl) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö getRequestAdmin ‚Äî ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ VITE_GET_REQUEST_ADMIN_URL");

  // ‡∏•‡∏≠‡∏á GET ‡∏Å‡πà‡∏≠‡∏ô
  const getUrl = new URL(baseUrl);
  getUrl.searchParams.set("rid", rid);

  try {
    const data = await fetchJson<any>(getUrl.toString(), {
      method: "GET",
      headers: buildAdminHeaders(),
      signal,
    });
    return toDetails(data, rid);
  } catch (e) {
    // ‡∏•‡∏≠‡∏á POST fallback (‡∏ö‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ POST ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
    const data = await fetchJson<any>(baseUrl, {
      method: "POST",
      headers: buildAdminHeaders(),
      body: JSON.stringify({ rid }),
      signal,
    });
    return toDetails(data, rid);
  }
}

function toDetails(payload: any, rid: string): RequestDetails {
  const raw = (payload?.data ?? payload) as AnyRecord;
  // ‡∏ö‡∏≤‡∏á backend ‡∏™‡πà‡∏á {ok:true,data:{...}} ‡∏´‡∏£‡∏∑‡∏≠ {rid:..., ...}
  const merged: AnyRecord = { rid, ...raw };
  const summary = normalizeSummary(merged);

  // map ‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏±‡∏Å‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
  const requesterPhone = raw.requester?.phone || raw.requesterPhone || raw.phone || undefined;
  const requesterEmail = raw.requester?.email || raw.requesterEmail || raw.email || undefined;
  const department = raw.department || raw.org || raw.vendor || undefined;
  const attachments = raw.attachments || raw.files || raw.images || undefined;
  const location = raw.location || raw.area || raw.floor || undefined;
  const startTime = toEpoch(raw.startTime || raw.start || raw.from);
  const endTime = toEpoch(raw.endTime || raw.end || raw.to);

  return {
    ...summary,
    requesterPhone,
    requesterEmail,
    department,
    attachments,
    location,
    startTime,
    endTime,
  };
}

// -----------------------------
// Hydrate ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î (‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏Å‡∏î API ‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô)
// -----------------------------
export interface HydrateOptions {
  concurrency?: number; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ 5)
  signal?: AbortSignal;
}

export async function hydrateRequests(
  summaries: RequestSummary[],
  opts: HydrateOptions = {}
): Promise<RequestDetails[]> {
  const { concurrency = 5, signal } = opts;
  const queue = [...summaries];
  const results: RequestDetails[] = [];

  async function worker() {
    while (queue.length) {
      const item = queue.shift();
      if (!item) break;
      if (signal?.aborted) throw new Error("Hydrate ‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å (aborted)");
      try {
        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ rid ‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≤‡∏°‡πÅ‡∏ï‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô summary ‚Üí details
        if (item.rid) {
          const d = await getRequestAdmin(item.rid, signal);
          results.push(d);
        } else {
          results.push({ ...item } as RequestDetails);
        }
      } catch (e: any) {
        // ‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏ö‡∏ö summary ‡∏û‡∏£‡πâ‡∏≠‡∏° error ‡πÉ‡∏ô raw ‡πÄ‡∏û‡∏∑‡πà‡∏≠ debug ‡∏ï‡πà‡∏≠
        results.push({ ...item, raw: { ...item.raw, hydrateError: String(e?.message || e) } } as RequestDetails);
      }
    }
  }

  const workers = Array.from({ length: Math.max(1, concurrency) }, () => worker());
  await Promise.all(workers);
  return results;
}

// -----------------------------
// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå):
// -----------------------------
// import { listRequestsAdmin, hydrateRequests } from "../lib/adminApi";
//
// async function loadPage() {
//   // 1) ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å 20 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
//   const page1 = await listRequestsAdmin({ page: 1, pageSize: 20, status: "pending" });
//   // page1.items ‡∏Ñ‡∏∑‡∏≠ RequestSummary[] ‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡πà status ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô "pending", "approved", "rejected" ‡πÅ‡∏•‡πâ‡∏ß
//
//   // 2) ‡πÄ‡∏ï‡∏¥‡∏°‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏´‡πâ 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å (hydrate with concurrency=5)
//   const details = await hydrateRequests(page1.items.slice(0, 10), { concurrency: 5 });
//
//   // 3) ‡∏ô‡∏≥‡πÑ‡∏õ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á/‡∏Å‡∏≤‡∏£‡πå‡∏î ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
// }
// ============================================================