// ======================================================================
// File: web/src/types/index.ts
// Purpose: ‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏£‡∏ß‡∏° Type ‡∏Ç‡∏≠‡∏á‡∏ù‡∏±‡πà‡∏á‡πÄ‡∏ß‡πá‡∏ö + ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á "‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î (Granular Permissions)"
// Created: 2025-10-11
// Updated: 2025-10-14 (Task 3: export permissions + ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö pagePermissions ‡∏ó‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà AdminCapabilities ‡πÅ‡∏•‡∏∞ AdminUser)
// Notes:
//   - ‡πÄ‡∏õ‡∏¥‡∏î re-export ‡∏à‡∏≤‡∏Å './permissions' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ import ‡∏ä‡∏ô‡∏¥‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏à‡∏∏‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
//   - ‡∏Ñ‡∏á‡∏ä‡πà‡∏≠‡∏á legacy ‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏Å‡πà‡∏≤‡∏û‡∏±‡∏á (‡∏à‡∏∞‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ migrate ‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á)
// ======================================================================

export * from "./permissions"; // re-export ‡∏ä‡∏ô‡∏¥‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î (barrel)
import type { AdminRole, PagePermissions } from "./permissions";

// ========== Admin & User Types ==========

/**
 * (LEGACY) ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏°‡πÜ ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡πâ‡∏≠‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
 * ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠ backward compatibility ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡πÉ‡∏ä‡πâ pagePermissions ‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
 */
export interface AdminCapabilities {
  // ---------------- Legacy (‡πÄ‡∏î‡∏¥‡∏°) ----------------
  // Dashboard & Reports
  view_dashboard?: boolean;
  view_reports?: boolean;

  // Approval & Review
  approve_requests?: boolean;
  review_requests?: boolean;

  // Permits & Logs
  view_permits?: boolean;
  view_logs?: boolean;

  // User Management
  manage_users?: boolean;

  // Settings & System
  manage_settings?: boolean;

  // Daily Work (‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°)
  viewTodayWork?: boolean;      // ‡∏î‡∏π‡∏á‡∏≤‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ
  viewOtherDaysWork?: boolean;  // ‡∏î‡∏π‡∏á‡∏≤‡∏ô‡∏ß‡∏±‡∏ô‡∏≠‡∏∑‡πà‡∏ô
  checkInOut?: boolean;         // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô/‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå

  // Special
  superadmin?: boolean;

  // ---------------- New (Granular) ----------------
  /**
   * ‚ú® ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤ (‡πÉ‡∏´‡∏°‡πà)
   * ‡∏à‡∏∞‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà legacy capabilities ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï
   */
  pagePermissions?: PagePermissions;
}

/**
 * ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö (‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ú‡πà‡∏≤‡∏ô)
 * - role: ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡πÉ‡∏´‡∏°‡πà (AdminRole)
 * - pagePermissions: ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î (‡πÉ‡∏´‡∏°‡πà)
 * - caps: ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏£‡∏ß‡∏°‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏° (legacy)
 */
export interface AdminUser {
  uid: string;
  email: string;
  displayName?: string;
  role: AdminRole;
  enabled?: boolean;
  pagePermissions?: PagePermissions; // ‚úÖ ‡∏Ç‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
  caps?: AdminCapabilities;          // ‚ôªÔ∏è ‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏° (‡∏¢‡∏±‡∏á‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö)
  createdAt?: string;
  updatedAt?: string;
  invitedBy?: string;
}

// ========== Work Permit Types ==========

export type PermitStatus =
  | "pending"
  | "approved"
  | "rejected"
  | "completed"
  | "cancelled";

export type PermitType =
  | "hot-work"
  | "confined-space"
  | "height-work"
  | "electrical"
  | "excavation"
  | string;

export interface WorkPermitRequest {
  rid: string;                    // Request ID (e.g., "WP-20251010-XRJR")
  contractorName: string;         // ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏´‡∏°‡∏≤
  permitType: PermitType;         // ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏á‡∏≤‡∏ô
  area: string;                   // ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (e.g., "F1 / T0101")
  startTime: string;              // ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏° (e.g., "08:00")
  endTime: string;                // ‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î (e.g., "17:00")
  workDate: string;               // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (ISO)
  status: PermitStatus;           // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï

  // Additional fields
  description?: string;
  hazards?: string[];
  ppe?: string[];
  approvedBy?: string;
  approvedAt?: string;
  rejectedReason?: string;

  // Timestamps
  createdAt: string;
  updatedAt: string;
}

// ========== Daily Work Types ==========

export type DailyStatus =
  | "scheduled"    // üü† ‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤ (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô)
  | "checked-in"   // üü¢ ‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß (‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå)
  | "checked-out"; // üîµ ‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß (‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå‡πÅ‡∏•‡πâ‡∏ß)

export interface DailyWorkItem extends WorkPermitRequest {
  // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Daily Operations
  dailyStatus: DailyStatus;

  // Check-in data
  checkedInAt?: string;          // ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô (ISO)
  checkedInBy?: string;          // UID ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô
  checkInNotes?: string;         // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏ï‡∏≠‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô

  // Check-out data
  checkedOutAt?: string;         // ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå (ISO)
  checkedOutBy?: string;         // UID ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå
  checkOutNotes?: string;        // ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏ï‡∏≠‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå

  // Worker count (optional)
  expectedWorkers?: number;
  actualWorkers?: number;
}

// ========== Calendar View Types ==========

export interface CalendarDayData {
  date: string;                  // "YYYY-MM-DD"
  totalWorks: number;
  scheduled: number;
  checkedIn: number;
  checkedOut: number;
}

export interface CalendarViewResponse {
  year: number;
  month: number;
  days: CalendarDayData[];
}

// ========== API Response Types ==========

export interface ApiResponse<T = any> {
  success: boolean;
  data?: T;
  error?: string;
  message?: string;
}

export interface PaginatedResponse<T> {
  items: T[];
  total: number;
  page: number;
  pageSize: number;
  hasMore: boolean;
}

// ========== Auth Types ==========

export interface AuthState {
  user: AdminUser | null;
  loading: boolean;
  error: string | null;
}

export interface LoginCredentials {
  email: string;
  password: string;
}

// ========== Log Types ==========

export interface SystemLog {
  id: string;
  timestamp: string;
  userId: string;
  userEmail: string;
  action: string;
  details?: any;
  ip?: string;
}

// ========== Utility Types ==========

export type Timestamp = string;   // ISO 8601
export type DateString = string;  // "YYYY-MM-DD"
export type TimeString = string;  // "HH:mm"
