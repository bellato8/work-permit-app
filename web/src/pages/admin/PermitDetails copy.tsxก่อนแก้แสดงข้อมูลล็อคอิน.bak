// ======================================================================
// File: web/src/pages/admin/PermitDetails.tsx
// เวอร์ชัน: 2025-10-22 (อ่านเข้า–ออกจาก Firestore แล้วฟิวส์กับข้อมูล API)
// หน้าที่: แสดงรายละเอียดใบงาน + อนุมัติ/ไม่อนุมัติ + Export PDF
// ปรับตามนี้:
//  - เรียก updateStatusApi เป็นอ็อบเจ็กต์ { rid, status, reason? } และใช้ "approved"/"rejected"
//  - กันกดซ้ำด้วย decideBusy (เดิมมีอยู่แล้ว)
// ======================================================================

import React, { useEffect, useMemo, useRef, useState } from "react";
import { Link, useParams } from "react-router-dom";
import { updateStatusApi } from "../../utils/updateStatus";
import { ref, getDownloadURL } from "firebase/storage";
import { storage, ensureSignedIn, auth } from "../../lib/firebase";
import { canDecide } from "../../lib/getClaims";
import ImageViewer from "../../components/ImageViewer";
import { useReactToPrint } from "react-to-print";

// Firestore (อ่านสมุด checkIns / checkOuts)
import {
  getFirestore,
  collection,
  query,
  where,
  getDocs,
} from "firebase/firestore";

function classNames(...xs: (string | false | undefined)[]) {
  return xs.filter(Boolean).join(" ");
}

type ToastKind = "success" | "error" | "info";
type ToastItem = { id: number; kind: ToastKind; title: string; message?: string };

function Toasts({ items, onDismiss }: { items: ToastItem[]; onDismiss: (id:number)=>void }) {
  const tone: Record<ToastKind, string> = {
    success: "border-emerald-300 bg-emerald-50 text-emerald-800",
    error:   "border-rose-300 bg-rose-50 text-rose-800",
    info:    "border-slate-300 bg-white text-slate-800",
  };
  const icon = (k: ToastKind) => k === "success" ? (
    <svg viewBox="0 0 24 24" className="h-5 w-5" fill="currentColor"><path d="M9 16.17 4.83 12l-1.42 1.41L9 19l12-12-1.41-1.41z"/></svg>
  ) : k === "error" ? (
    <svg viewBox="0 0 24 24" className="h-5 w-5" fill="currentColor"><path d="M12 2 2 22h20L12 2zm1 15h-2v-2h2v2zm0-4h-2V8h2v5z"/></svg>
  ) : (
    <svg viewBox="0 0 24 24" className="h-5 w-5" fill="currentColor"><path d="M11 7h2v2h-2zm0 4h2v6h-2z"/><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2z" fillOpacity=".15"/></svg>
  );
  return (
    <div className="fixed bottom-4 right-4 z-[70] space-y-2">
      {items.map(t => (
        <div key={t.id}
          className={classNames("w-[320px] rounded-xl border p-3 shadow-lg ring-1 ring-black/5 animate-[slideIn_140ms_ease-out]",
            tone[t.kind])}>
          <div className="flex gap-2">
            <div className="mt-0.5">{icon(t.kind)}</div>
            <div className="min-w-0">
              <div className="font-medium truncate">{t.title}</div>
              {t.message && <div className="text-sm opacity-80 truncate">{t.message}</div>}
            </div>
            <button className="ml-auto opacity-60 hover:opacity-100" onClick={()=>onDismiss(t.id)}>✕</button>
          </div>
        </div>
      ))}
    </div>
  );
}

type AnyRec = Record<string, any>;
type WorkerItem = {
  name?: string;
  citizenId?: string;
  isSupervisor?: boolean;
  photoPath?: string;
  photoUrl?: string;
};

const GET_DETAIL_URL = import.meta.env.VITE_GET_REQUEST_ADMIN_URL as string;

// ---------- เวลา/รูปแบบสตริง ----------
function tsToMillis(input: any): number | undefined {
  if (input == null) return undefined;
  if (typeof input === "object") {
    if (typeof (input as any)._seconds === "number") {
      const secs = (input as any)._seconds as number;
      const nanos = Number((input as any)._nanoseconds || 0);
      return secs * 1000 + Math.round(nanos / 1e6);
    }
    if (typeof (input as any).seconds === "number") {
      const secs = (input as any).seconds as number;
      const nanos = Number((input as any).nanoseconds || 0);
      return secs * 1000 + Math.round(nanos / 1e6);
    }
  }
  if (typeof input === "number") return input > 1e12 ? input : input * 1000;
  if (typeof input === "string") {
    const t = Date.parse(input);
    if (!Number.isNaN(t)) return t;
  }
  return undefined;
}

function fmtDateTimeBE(input: any): string {
  const ms = tsToMillis(input);
  if (!ms) return "-";
  try {
    const d = new Date(ms);
    const fmt = new Intl.DateTimeFormat("th-TH-u-ca-buddhist", {
      year: "numeric", month: "short", day: "2-digit",
      hour: "2-digit", minute: "2-digit", hour12: false,
    });
    return fmt.format(d).replace(/\u200f/g, "");
  } catch {
    return "-";
  }
}

function thaiStatus(s?: string): string {
  const t = (s || "").toLowerCase();
  if (t.includes("approve")) return "อนุมัติแล้ว";
  if (t.includes("reject")) return "ไม่อนุมัติ";
  if (t.includes("return")) return "ตีกลับ/แก้ไข";
  return "รอดำเนินการ";
}
const text = (v: any): string => {
  if (v == null) return "-";
  if (typeof v === "string") return v || "-";
  try { return JSON.stringify(v); } catch { return String(v); }
};

// ---------- สกัดข้อมูล ----------
const firstOf = (obj: AnyRec | undefined, keys: string[]): string | undefined => {
  if (!obj) return undefined;
  for (const k of keys) {
    const v = obj[k];
    if (typeof v === "string" && v.trim()) return v.trim();
  }
  return undefined;
};
const toFullId = (p: AnyRec): string =>
  firstOf(p, ["citizenId", "documentId", "idNumber", "docNo", "cardNo", "id"]) ||
  p?.citizenIdMasked || p?.documentIdMasked || "-";

const sysMap: Record<string, string> = {
  electric: "ระบบไฟฟ้า",
  electricity: "ระบบไฟฟ้า",
  amp: "กำลังไฟ/แอมป์",
  lighting: "ระบบแสงสว่าง",
  hvac: "ระบบปรับอากาศ",
  air: "ระบบปรับอากาศ",
  water: "ระบบน้ำ",
  plumbing: "ระบบประปา",
  gas: "ระบบแก๊ส",
  fire: "ระบบป้องกันอัคคีภัย",
};
const normalizeSystemKey = (s: string) => s.toLowerCase().trim().replace(/[^a-z]/g, "");
const systemsToThai = (data: AnyRec | string | undefined): string => {
  if (!data) return "-";
  const out = new Set();
  if (typeof data === "string") {
    for (const raw of data.split(",")) {
      const k = normalizeSystemKey(raw);
      if (sysMap[k]) out.add(sysMap[k]);
    }
  } else if (typeof data === "object") {
    Object.entries(data).forEach(([k, v]) => {
      if (v === true || String(v).toLowerCase() === "true") {
        const key = normalizeSystemKey(k);
        if (sysMap[key]) out.add(sysMap[key]);
      }
    });
  }
  return out.size ? Array.from(out).join(", ") : "-";
};
const joinAddress = (detail?: AnyRec, requester?: AnyRec): string => {
  const fromString = typeof requester?.address === "string" ? requester?.address : "";
  const detailStr = firstOf(detail, ["detail", "address"]) || "";
  const sub = firstOf(detail, ["subdistrict", "subDistrict", "tambon"]) || "";
  const dist = firstOf(detail, ["district", "amphoe"]) || "";
  const prov = firstOf(detail, ["province"]) || "";
  const joined = [detailStr, sub, dist, prov].filter(Boolean).join(" ");
  return (joined || fromString || "-").trim();
};

const urlCache = new Map<string, string>();
async function pathToUrl(path?: string, url?: string): Promise<string | null> {
  if (url && /^https?:\/\//i.test(url)) return url;
  if (!path) return null;
  if (urlCache.has(path)) return urlCache.get(path)!;
  try {
    await ensureSignedIn();
    const storageRef = ref(storage, path);
    const dl = await getDownloadURL(storageRef);
    urlCache.set(path, dl);
    return dl;
  } catch (e) {
    console.error("getDownloadURL failed:", path, e);
    return null;
  }
}

// ---------- ช่วยหยิบค่าหลายชื่อฟิลด์ (สำหรับเข้า-ออก) ----------
const pickAny = (root: AnyRec | undefined, keys: string[]): any => {
  if (!root) return undefined;
  for (const k of keys) {
    const v = root[k];
    if (v !== undefined && v !== null && v !== "") return v;
  }
  return undefined;
};
const formatWho = (by: any, altEmail?: string): string => {
  if (!by) return altEmail || "-";
  if (typeof by === "string") return by;
  const name = by.displayName || by.name || by.fullname || "";
  const email = by.email || altEmail || "";
  return [name, email ? `(${email})` : ""].filter(Boolean).join(" ").trim() || "-";
};
const toDateParam = (ms?: number) => {
  if (!ms) return "";
  const d = new Date(ms);
  const y = d.getFullYear();
  const m = String(d.getMonth() + 1).padStart(2, "0");
  const dd = String(d.getDate()).padStart(2, "0");
  return `${y}-${m}-${dd}`;
};

// ----------------------------- คอมโพเนนต์หลัก -----------------------------
export default function PermitDetails() {
  const params = useParams<{ rid?: string; id?: string }>();
  const ridParam = (params.rid || params.id || "").trim();

  const [loading, setLoading] = useState(false);
  const [data, setData] = useState<AnyRec | null>(null);
  const [err, setErr] = useState<string | null>(null);
  const [allowed, setAllowed] = useState<boolean | null>(null);

  const [decideBusy, setDecideBusy] = useState(false);
  const [showReject, setShowReject] = useState(false);
  const [reason, setReason] = useState("");

  const [toasts, setToasts] = useState<ToastItem[]>([]);
  function pushToast(kind: ToastKind, title: string, message?: string) {
    const id = Date.now() + Math.floor(Math.random() * 1000);
    setToasts((xs) => [...xs, { id, kind, title, message }]);
    setTimeout(() => setToasts((xs) => xs.filter((t) => t.id !== id)), 3000);
  }

  const [requesterPhotoUrl, setRequesterPhotoUrl] = useState<string | null>(null);
  const [workerThumbUrls, setWorkerThumbUrls] = useState<string[]>([]);

  // เก็บผลอ่านจาก Firestore (ล่าสุด) เพื่อมาฟิวส์กับของ API
  const [externalCheckIn, setExternalCheckIn] = useState<{ at?: number; by?: any; email?: string; note?: string } | null>(null);
  const [externalCheckOut, setExternalCheckOut] = useState<{ at?: number; by?: any; email?: string; note?: string } | null>(null);

  const printAreaRef = useRef(null);
  const handlePrint = useReactToPrint({
    contentRef: printAreaRef,
    documentTitle: `work-permit_${ridParam || "details"}`,
    pageStyle: `
      @page { size: A4; margin: 12mm }
      html, body { -webkit-print-color-adjust: exact; print-color-adjust: exact; }
      .no-print { display: none !important; }
      a[href]:after { content: "" !important; }
    `,
  });

  // โหลดสิทธิ์ (ไว้ซ่อนปุ่ม)
  useEffect(() => {
    let live = true;
    canDecide()
      .then(ok => { if (live) setAllowed(ok); })
      .catch(() => { if (live) setAllowed(false); });
    return () => { live = false; };
  }, []);

  // ---------- โหลดรายละเอียด (ใช้ Bearer token) ----------
  useEffect(() => {
    let alive = true;
    const controller = new AbortController();

    async function run() {
      setErr(null); setLoading(true); setData(null);

      if (!ridParam) { setErr("ไม่พบ RID ใน URL"); setLoading(false); return; }
      if (!GET_DETAIL_URL) { setErr("ยังไม่ได้ตั้งค่า VITE_GET_REQUEST_ADMIN_URL"); setLoading(false); return; }

      try {
        await ensureSignedIn();
        const token = await auth.currentUser?.getIdToken();
        const base = GET_DETAIL_URL.replace(/\/+$/, "");
        const url = `${base}?requestId=${encodeURIComponent(ridParam)}`;

        const res = await fetch(url, {
          method: "GET",
          headers: {
            Accept: "application/json",
            "Content-Type": "application/json",
            ...(token ? { Authorization: `Bearer ${token}` } : {}),
          },
          signal: controller.signal,
        });

        if (res.status === 401) throw new Error("ไม่ได้รับอนุญาต (ต้องเข้าสู่ระบบ)");
        if (res.status === 403) {
          const j = await res.json().catch(()=>null);
          if (j?.code === "need_view_permits") {
            throw new Error("บัญชีนี้ยังไม่มีสิทธิ์ดูรายละเอียดใบงาน (ติดต่อผู้ดูแลให้เพิ่มสิทธิ์ viewPermits/viewAll/approve)");
          }
          throw new Error("ถูกปฏิเสธการเข้าถึง");
        }
        if (!res.ok) throw new Error(`HTTP ${res.status}: ${res.statusText}`);

        const json = await res.json().catch(() => ({}));
        if (!json?.success && !json?.data) throw new Error(json?.error || json?.message || `ไม่พบข้อมูล RID: ${ridParam}`);

        if (!alive) return;
        setData(json.data || json);
      } catch (e:any) {
        if (!alive || e?.name === "AbortError") return;
        console.error("[getRequestAdmin] error:", e);
        setErr(e?.message || String(e));
      } finally {
        if (alive) setLoading(false);
      }
    }
    run();

    return () => { alive = false; controller.abort(); };
  }, [ridParam]);

  // โหลดเข้า–ออกจาก Firestore (เอาล่าสุดของ RID นี้แบบไม่ใช้ orderBy)
  useEffect(() => {
    let alive = true;

    // ตัวช่วย: คืนค่าเวลาเป็นเลข ms จาก doc (ลองหลายคีย์)
    const pickMs = (doc: any, keys: string[]) => {
      for (const k of keys) {
        const v = doc?.[k];
        const ms =
          v && typeof v === "object" && ("seconds" in v || "_seconds" in v)
            ? (v.seconds ?? v._seconds) * 1000 +
              Math.round(((v.nanoseconds ?? v._nanoseconds) || 0) / 1e6)
            : typeof v === "number"
            ? (v > 1e12 ? v : v * 1000)
            : typeof v === "string"
            ? Date.parse(v)
            : undefined;
        if (ms && !Number.isNaN(ms)) return ms;
      }
      return undefined;
    };

    async function fetchAttendance() {
      try {
        if (!ridParam) return;
        await ensureSignedIn();
        const db = getFirestore();

        // IN: where requestId == RID (ไม่ orderBy เพื่อเลี่ยงดัชนีผสม)
        const inSnap = await getDocs(
          query(collection(db, "checkIns"), where("requestId", "==", ridParam))
        );
        const inDocs = inSnap.docs.map(d => d.data());
        // คัดตัวที่เวลาใหญ่สุด (ล่าสุด)
        const inBest =
          inDocs
            .map((doc) => ({
              raw: doc,
              at: pickMs(doc, ["checkedInAt", "checkInAt", "createdAt"]),
            }))
            .sort((a, b) => (b.at ?? 0) - (a.at ?? 0))[0] || null;

        // OUT: where requestId == RID (ไม่ orderBy)
        const outSnap = await getDocs(
          query(collection(db, "checkOuts"), where("requestId", "==", ridParam))
        );
        const outDocs = outSnap.docs.map(d => d.data());
        const outBest =
          outDocs
            .map((doc) => ({
              raw: doc,
              at: pickMs(doc, ["checkedOutAt", "checkOutAt", "createdAt"]),
            }))
            .sort((a, b) => (b.at ?? 0) - (a.at ?? 0))[0] || null;

        if (!alive) return;

        setExternalCheckIn(
          inBest
            ? {
                at: inBest.at,
                by: inBest.raw?.checkedInBy ?? inBest.raw?.inBy ?? null,
                email:
                  inBest.raw?.checkedInBy?.email ??
                  inBest.raw?.inByEmail ??
                  inBest.raw?.email,
                note: inBest.raw?.notes ?? inBest.raw?.note ?? "",
              }
            : null
        );

        setExternalCheckOut(
          outBest
            ? {
                at: outBest.at,
                by: outBest.raw?.checkedOutBy ?? outBest.raw?.outBy ?? null,
                email:
                  outBest.raw?.checkedOutBy?.email ??
                  outBest.raw?.outByEmail ??
                  outBest.raw?.email,
                note: outBest.raw?.notes ?? outBest.raw?.note ?? "",
              }
            : null
        );
      } catch (e) {
        console.warn("[PermitDetails] fetchAttendance (no-orderBy):", e);
      }
    }

    fetchAttendance();
    return () => {
      alive = false;
    };
  }, [ridParam]);

  // สกัดฟิลด์เพื่อแสดงผล
  const detail = data || {};
  const w = detail?.work ?? {};
  const loc = w?.location ?? detail?.location ?? {};
  const bs = w?.buildingSystems ?? detail?.buildingSystems ?? detail?.systems ?? {};
  const req = detail?.requester ?? {};

  const systemsThai = useMemo(() => systemsToThai(bs || w?.systems || detail?.systems), [bs, w?.systems, detail?.systems]);
  const addressFull = useMemo(() => joinAddress(loc, req), [loc, req]);

  const workersRaw = useMemo(() => {
    const arr =
      (Array.isArray(detail?.workers) && detail.workers) ||
      (Array.isArray(detail?.team) && detail.team) ||
      (Array.isArray(detail?.members) && detail.members) ||
      [];
    return arr.map((w:any) => {
      if (!w) return {};
      if (typeof w === "string") return { name: w };
      return {
        name: w.name || w.fullname || [w.firstname, w.lastname].filter(Boolean).join(" "),
        citizenId: w.citizenId || w.idCard || w.cid || w.documentId || w.idNumber || w.docNo || w.cardNo,
        isSupervisor: !!(w.isSupervisor || w.supervisor),
        photoPath: w.photoPath || w.idcardPath || w.storagePath || w.imagePath,
        photoUrl: w.photoUrl || w.imageUrl || w.avatar,
      } as WorkerItem;
    }).filter((x:any)=>x && (x.name || x.citizenId || x.photoPath || x.photoUrl));
  }, [detail]);

  const [workersResolved, setWorkersResolved] = useState<(WorkerItem & { __idFull?: string })[]>([]);
  useEffect(() => {
    const rows = workersRaw.map((p) => ({ ...p, __idFull: toFullId(p) }));
    setWorkersResolved(rows);
  }, [workersRaw]);

  const statusText = thaiStatus(detail?.status || detail?.decision?.status);

  // ---------- จัดรูปสำหรับแสดง (ใช้ Signed URL ก่อน ถ้ามี) ----------
  useEffect(() => {
    let alive = true;
    async function resolvePreviewImages() {
      // ผู้ยื่นคำขอ: ใช้ URL ที่ API แนบมาก่อน
      const idStamped = detail?.images?.idCardStampedUrl;
      const idClean   = detail?.images?.idCardCleanUrl;
      if (idStamped || idClean) {
        if (!alive) return;
        setRequesterPhotoUrl(idStamped || idClean);
      } else {
        // fallback storage path
        const candidates: { path?: string; url?: string }[] = [
          { path: detail?.images?.idCardStampedPath },
          { path: detail?.images?.idCardCleanPath },
          { path: req?.photoPath, url: req?.photoUrl },
        ];
        for (const c of candidates) {
          const u = await pathToUrl(c.path, c.url);
          if (!alive) return;
          if (u) { setRequesterPhotoUrl(u); break; }
        }
      }

      // ผู้ร่วมงาน: ถ้า API แนบ cleanUrl/stampedUrl มา ให้ใช้ก่อน
      const imgs: string[] = [];
      const workersImgFromApi = Array.isArray(detail?.images?.workers) ? detail.images.workers : [];
      for (let i = 0; i < workersResolved.length; i++) {
        const apiDef = workersImgFromApi[i] || {};
        let got: string | null = null;
        if (apiDef?.cleanUrl || apiDef?.stampedUrl) {
          got = apiDef.cleanUrl || apiDef.stampedUrl || null;
        } else {
          const cands: { path?: string; url?: string }[] = [
            { path: apiDef?.cleanPath }, { path: apiDef?.stampedPath },
            { path: workersResolved[i]?.photoPath, url: workersResolved[i]?.photoUrl },
          ];
          for (const c of cands) { got = await pathToUrl(c.path, c.url); if (got) break; }
        }
        imgs.push(got || "");
      }
      if (!alive) return;
      setWorkerThumbUrls(imgs);
    }
    if (data) resolvePreviewImages();
    return () => { alive = false; };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [data, workersResolved.length]);

  // รวมรูปสำหรับ ImageViewer (รวม workers + attachments/photos)
  const workerImageItems = useMemo(() => {
    const items: { label: string; path?: string; url?: string }[] = [];
    const arr = Array.isArray(detail?.images?.workers) ? detail.images.workers : [];
    arr.forEach((w:any, i:number) => {
      const idx = i + 1;
      if (w?.cleanUrl)   items.push({ label: `ผู้ร่วมงาน #${idx} (ก่อนประทับ)`, url: w.cleanUrl });
      if (w?.stampedUrl) items.push({ label: `ผู้ร่วมงาน #${idx} (หลังประทับ)`, url: w.stampedUrl });
      if (w?.cleanPath && !w?.cleanUrl)     items.push({ label: `ผู้ร่วมงาน #${idx} (ก่อนประทับ)`, path: w.cleanPath });
      if (w?.stampedPath && !w?.stampedUrl) items.push({ label: `ผู้ร่วมงาน #${idx} (หลังประทับ)`, path: w.stampedPath });
    });
    return items;
  }, [detail?.images?.workers]);

  const attachmentImageItems = useMemo(() => ([
    ...(detail?.attachments || []).map((att: any, i: number) => ({
      label: att.label || `ไฟล์แนบ ${i + 1}`,
      url: att.url,
      path: att.path,
    })),
    ...(detail?.photos || []).map((photo: any, i: number) => ({
      label: photo.label || `ภาพ ${i + 1}`,
      url: photo.url,
      path: photo.path,
    })),
    ...(detail?.images?.idCardCleanUrl ? [{ label: "บัตรประชาชน (ก่อนประทับ)", url: detail.images.idCardCleanUrl }] : []),
    ...(detail?.images?.idCardStampedUrl ? [{ label: "บัตรประชาชน (หลังประทับ)", url: detail.images.idCardStampedUrl }] : []),
  ]), [detail?.attachments, detail?.photos, detail?.images?.idCardCleanUrl, detail?.images?.idCardStampedUrl]);

  // ---------- ค่าจาก API (ถ้ามี) ----------
  const attendance = detail?.attendance || detail?.check || {};
  const checkInAtRaw   = pickAny(detail, ["checkInAt","checkinAt","check_in_at"])   ?? pickAny(attendance, ["checkInAt","inAt","checkinAt"]);
  const checkOutAtRaw  = pickAny(detail, ["checkOutAt","checkoutAt","check_out_at"]) ?? pickAny(attendance, ["checkOutAt","outAt","checkoutAt"]);
  const checkInByObj   = pickAny(detail, ["checkInBy","checkinBy","check_in_by"])   ?? pickAny(attendance, ["checkInBy","inBy"]);
  const checkOutByObj  = pickAny(detail, ["checkOutBy","checkoutBy","check_out_by"]) ?? pickAny(attendance, ["checkOutBy","outBy"]);
  const checkInEmail   = pickAny(detail, ["checkInByEmail","checkinByEmail"])       ?? pickAny(attendance, ["checkInByEmail","inByEmail"]);
  const checkOutEmail  = pickAny(detail, ["checkOutByEmail","checkoutByEmail"])     ?? pickAny(attendance, ["checkOutByEmail","outByEmail"]);
  const checkInNoteApi = pickAny(detail, ["checkInNote","checkinNote","check_in_note"]) ?? pickAny(attendance, ["checkInNote","inNote"]);
  const checkOutNoteApi= pickAny(detail, ["checkOutNote","checkoutNote","check_out_note"]) ?? pickAny(attendance, ["checkOutNote","outNote"]);

  // ฟิวส์: ใช้ของ API ก่อน ถ้าไม่มีค่อยใช้ Firestore
  const checkInAtFinal  = tsToMillis(checkInAtRaw) ?? externalCheckIn?.at;
  const checkOutAtFinal = tsToMillis(checkOutAtRaw) ?? externalCheckOut?.at;

  const whoInFinal  = (formatWho(checkInByObj,  String(checkInEmail || "")) !== "-" ?
                      formatWho(checkInByObj,  String(checkInEmail || "")) :
                      formatWho(externalCheckIn?.by,  externalCheckIn?.email));
  const whoOutFinal = (formatWho(checkOutByObj, String(checkOutEmail || "")) !== "-" ?
                      formatWho(checkOutByObj, String(checkOutEmail || "")) :
                      formatWho(externalCheckOut?.by, externalCheckOut?.email));

  const checkInNoteFinal  = (checkInNoteApi  ?? externalCheckIn?.note)  || "";
  const checkOutNoteFinal = (checkOutNoteApi ?? externalCheckOut?.note) || "";

  const plannedStart = tsToMillis(detail?.work?.from || detail?.time?.start || detail?.from || detail?.startAt);
  const opDateParam  = toDateParam(checkInAtFinal || plannedStart);

  // ---------- ฟังก์ชันอนุมัติ/ไม่อนุมัติ ----------
  async function doApprove() {
    if (!ridParam || decideBusy) return;
    setDecideBusy(true);
    try {
      // เรียกแบบอ็อบเจ็กต์ให้ตรงกับยูทิล + ใช้คำที่ระบบเดิมรองรับ
      await updateStatusApi({ rid: ridParam, status: "approved" });
      pushToast("success", "อนุมัติสำเร็จ");
      setTimeout(() => window.location.reload(), 800);
    } catch (e: any) {
      pushToast("error", "อนุมัติไม่สำเร็จ", e?.message || String(e));
    } finally {
      setDecideBusy(false);
    }
  }

  async function doReject() {
    if (!ridParam || !reason.trim() || decideBusy) return;
    setDecideBusy(true);
    try {
      // เรียกแบบอ็อบเจ็กต์ให้ตรงกับยูทิล + ใช้คำที่ระบบเดิมรองรับ
      await updateStatusApi({ rid: ridParam, status: "rejected", reason: reason.trim() });
      pushToast("success", "ไม่อนุมัติสำเร็จ");
      setTimeout(() => window.location.reload(), 800);
    } catch (e: any) {
      pushToast("error", "ไม่อนุมัติไม่สำเร็จ", e?.message || String(e));
    } finally {
      setDecideBusy(false);
      setShowReject(false);
      setReason("");
    }
  }

  return (
    <div>
      {/* Header */}
      <div className="flex flex-wrap items-center justify-between gap-3">
        <div>
          <h1 className="text-xl font-semibold">รายละเอียดคำขอ</h1>
          <div className="text-sm text-slate-600">
            RID: {detail?.rid || detail?.requestId || detail?.id || ridParam || "-"}
          </div>
        </div>
        <div className="flex items-center gap-2">
          <span
            className={`px-3 py-1 rounded-full text-sm ${
              statusText === "อนุมัติแล้ว"
                ? "bg-emerald-100 text-emerald-700"
                : statusText === "ไม่อนุมัติ"
                ? "bg-rose-100 text-rose-700"
                : "bg-amber-100 text-amber-700"
            }`}
          >
            {statusText}
          </span>

          <button
            onClick={() => handlePrint()}
            disabled={!data}
            className="px-3 py-1 rounded-lg border border-gray-300 hover:bg-gray-50 text-sm"
            title={!data ? "กำลังโหลดข้อมูล..." : "บันทึกเป็น PDF"}
          >
            Export PDF
          </button>

          <Link to="/admin/permits" className="px-3 py-1 rounded-lg border border-gray-300 hover:bg-gray-50 text-sm">
            ← กลับรายการ
          </Link>
        </div>
      </div>

      {loading && (
        <div className="mt-4 p-3 rounded-lg bg-blue-50 border border-blue-200 text-blue-700">
          กำลังโหลดข้อมูลจาก API...
        </div>
      )}

      {err && (
        <div className="mt-4 p-3 rounded-lg bg-red-50 border border-red-200 text-red-700">
          <div className="font-medium">เกิดข้อผิดพลาด:</div>
          <div className="text-sm mt-1">{err}</div>
          <div className="text-xs mt-2 opacity-70">URL: {GET_DETAIL_URL}</div>
          <button onClick={() => window.location.reload()} className="mt-2 px-3 py-1 bg-red-100 hover:bg-red-200 rounded text-sm">
            ลองใหม่
          </button>
        </div>
      )}

      {/* ปุ่มตัดสินใจ (โชว์เฉพาะคนที่มีสิทธิ์ และสถานะกำลังรอดำเนินการ) */}
      {!loading && !err && data && thaiStatus(detail?.status || detail?.decision?.status) === "รอดำเนินการ" && allowed && (
        <div className="mt-4 flex flex-wrap items-center gap-3 no-print">
          <button
            onClick={async () => { await doApprove(); }}
            disabled={decideBusy}
            className="inline-flex items-center gap-2 bg-emerald-600 hover:bg-emerald-700 text-white px-4 py-2 rounded-xl disabled:bg-gray-400"
          >
            {decideBusy ? "กำลังบันทึก..." : "อนุมัติ"}
          </button>
          <button onClick={() => setShowReject(true)} disabled={decideBusy} className="inline-flex items-center gap-2 bg-rose-600 hover:bg-rose-700 text-white px-4 py-2 rounded-xl disabled:bg-gray-400">
            ไม่อนุมัติ
          </button>
        </div>
      )}
      {!loading && !err && data && thaiStatus(detail?.status || detail?.decision?.status) === "รอดำเนินการ" && allowed === false && (
        <div className="mt-4 text-sm text-slate-600 no-print">
          * คุณไม่มีสิทธิ์ในการตัดสินคำขอนี้ (ปุ่มถูกซ่อน)
        </div>
      )}

      {/* เนื้อหา */}
      {!loading && !err && data && (
        <div className="mt-6 grid grid-cols-1 lg:grid-cols-3 gap-4" ref={printAreaRef}>
          {/* ซ้าย: ข้อมูลหลัก */}
          <section className="lg:col-span-2 space-y-4">
            {/* 1) ผู้ยื่นคำขอ */}
            <div className="rounded-2xl border border-gray-200 bg-white p-4">
              <div className="text-base font-semibold mb-2">1) ผู้ยื่นคำขอ</div>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div className="space-y-2 text-sm">
                  <div>
                    <span className="text-slate-500">ชื่อ-นามสกุล</span>
                    <div className="font-medium">
                      {detail?.requester?.fullname || detail?.requester?.name || detail?.contractorName || detail?.requesterName || "-"}
                    </div>
                  </div>
                  <div>
                    <span className="text-slate-500">บริษัท</span>
                    <div className="font-medium">{detail?.requester?.company || detail?.company || detail?.contractorCompany || "-"}</div>
                  </div>
                  <div>
                    <span className="text-slate-500">อีเมล</span>
                    <div className="font-medium">{detail?.requester?.email || detail?.email || "-"}</div>
                  </div>
                  <div>
                    <span className="text-slate-500">เบอร์โทร</span>
                    <div className="font-medium">{detail?.requester?.phone || detail?.phone || "-"}</div>
                  </div>
                  <div>
                    <span className="text-slate-500">ที่อยู่</span>
                    <div className="font-medium">{addressFull}</div>
                  </div>
                  <div>
                    <span className="text-slate-500">เลขบัตร/เอกสาร</span>
                    <div className="font-medium">{toFullId(detail?.requester || {})}</div>
                  </div>
                </div>
                <div className="flex items-start justify-center">
                  <div className="w-40 h-40 rounded-xl border border-dashed border-slate-300 text-slate-400 flex items-center justify-center text-sm overflow-hidden bg-slate-50">
                    {requesterPhotoUrl ? (
                      <img
                        src={requesterPhotoUrl}
                        alt="ผู้ยื่นคำขอ"
                        className="w-full h-full object-cover"
                        loading="eager"
                        decoding="async"
                      />
                    ) : (
                      <>รูปผู้ขอ<br/>(ดูในไฟล์แนบ)</>
                    )}
                  </div>
                </div>
              </div>
            </div>

            {/* 2) รายละเอียดงาน/สถานที่/เวลา */}
            <div className="rounded-2xl border border-gray-200 bg-white p-4">
              <div className="text-base font-semibold mb-2">2) รายละเอียดงาน/สถานที่/เวลา</div>
              <div className="grid md:grid-cols-2 gap-2 text-sm">
                <div>
                  <div className="text-gray-500">ประเภทงาน</div>
                  <div className="font-medium">{detail?.work?.type || detail?.jobType || detail?.workType || detail?.type || "-"}</div>
                </div>
                <div>
                  <div className="text-gray-500">พื้นที่ปฏิบัติงาน</div>
                  <div className="font-medium">{detail?.work?.area || detail?.area || "-"}</div>
                </div>
                <div>
                  <div className="text-gray-500">ชั้น/โซน</div>
                  <div className="font-medium">{detail?.work?.floor || detail?.floor || "-"}</div>
                </div>
                <div>
                  <div className="text-gray-500">ช่วงเวลา</div>
                  <div className="font-medium">
                    {text(detail?.work?.from || detail?.time?.start || detail?.from || detail?.startAt)} —{" "}
                    {text(detail?.work?.to || detail?.time?.end || detail?.to || detail?.endAt)}
                  </div>
                </div>
                <div>
                  <div className="text-gray-500">งานร้อน (Hot Work)</div>
                  <div className="font-medium">{detail?.work?.hotWork || detail?.hotWork ? "มี" : "ไม่มี"}</div>
                </div>
                <div>
                  <div className="text-gray-500">ระบบอาคารที่เกี่ยวข้อง</div>
                  <div className="font-medium">{systemsThai}</div>
                </div>
                <div className="md:col-span-2">
                  <div className="text-gray-500">อุปกรณ์นำเข้า/ออก</div>
                  <div className="font-medium">
                    {(detail?.work?.equipments?.has ? detail?.work?.equipments?.details || "มี (ไม่ได้ระบุ)" : "ไม่มี") || detail?.equipment || "-"}
                  </div>
                </div>
              </div>
            </div>

            {/* 3) ผู้ร่วมงาน */}
            <div className="rounded-2xl border border-gray-200 bg-white p-4">
              <div className="text-base font-semibold mb-2">3) รายชื่อผู้ร่วมงาน ({workersResolved.length} คน)</div>
              {workersResolved.length === 0 ? (
                <div className="text-sm text-gray-500">— ไม่มีข้อมูลผู้ร่วมงาน —</div>
              ) : (
                <div className="grid md:grid-cols-2 gap-3">
                  {workersResolved.map((p, i) => (
                    <div key={i} className="flex gap-3 items-center rounded-2xl border border-slate-200/70 bg-white/60 p-3">
                      <div className="w-14 h-14 flex-shrink-0 rounded-xl border border-slate-200 overflow-hidden bg-slate-100">
                        {workerThumbUrls[i] ? (
                          <img
                            src={workerThumbUrls[i]}
                            alt={`ผู้ร่วมงาน ${p.name || ""}`}
                            className="w-full h-full object-cover"
                            loading="eager"
                            decoding="async"
                          />
                        ) : (
                          <div className="w-full h-full flex items-center justify-center text-slate-400 text-xs">
                            รูปถ่าย
                          </div>
                        )}
                      </div>
                      <div className="min-w-0">
                        <div className="font-medium truncate">{p.name || "-"}</div>
                        <div className="text-slate-500 text-sm">เลขเอกสาร: {p.__idFull || "-"}</div>
                        {p.isSupervisor && (
                          <span className="inline-block mt-1 px-2 py-0.5 rounded bg-indigo-50 text-indigo-700 text-xs">
                            ผู้ควบคุม
                          </span>
                        )}
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>

            {/* 4) เวลา/ผู้ตัดสิน */}
            <div className="rounded-2xl border border-gray-200 bg-white p-4">
              <div className="text-base font-semibold mb-2">4) บันทึกเวลา/ผู้ตัดสิน</div>
              <div className="grid md:grid-cols-2 gap-2 text-sm">
                <div>
                  <div className="text-gray-500">สร้างเมื่อ</div>
                  <div className="font-medium">{fmtDateTimeBE(detail?.createdAt)}</div>
                </div>
                <div>
                  <div className="text-gray-500">อัปเดตล่าสุด</div>
                  <div className="font-medium">{fmtDateTimeBE(detail?.updatedAt || detail?.decision?.at)}</div>
                </div>
                <div>
                  <div className="text-gray-500">ผู้ตัดสิน</div>
                  <div className="font-medium">
                    {detail?.decision?.by?.displayName
                      ? `${detail.decision.by.displayName} (${detail.decision.by.email || "-"})`
                      : (detail?.decision?.byEmail || detail?.approvedByEmail || detail?.rejectedByEmail || "-")}
                  </div>
                </div>
                <div>
                  <div className="text-gray-500">ผลล่าสุด</div>
                  <div className="font-medium">{thaiStatus(detail?.status || detail?.decision?.status)}</div>
                </div>
                {(detail?.decision?.reason || detail?.rejectionReason) && (
                  <div className="md:col-span-2">
                    <div className="text-gray-500">เหตุผล</div>
                    <div className="font-medium">{detail?.decision?.reason || detail?.rejectionReason}</div>
                  </div>
                )}
              </div>
            </div>

            {/* 5) ประวัติการเข้า-ออกหน้างาน (แบบย่อ) */}
            <div className="rounded-2xl border border-gray-200 bg-white p-4">
              <div className="flex items-center justify-between mb-2">
                <div className="text-base font-semibold">5) ประวัติการเข้า-ออกหน้างาน</div>
                {opDateParam && (
                  <Link
                    to={`/admin/daily-operations?date=${opDateParam}`}
                    className="text-sm px-3 py-1 rounded-lg border border-slate-300 hover:bg-slate-50"
                    title="ไปดูวันนั้นในงานประจำวัน"
                  >
                    ไปดูวันนั้นในงานประจำวัน
                  </Link>
                )}
              </div>
              <div className="grid md:grid-cols-2 gap-2 text-sm">
                <div>
                  <div className="text-gray-500">เข้าเมื่อ</div>
                  <div className="font-medium">{fmtDateTimeBE(checkInAtFinal)}</div>
                  <div className="text-slate-600 mt-0.5">{whoInFinal || "-"}</div>
                  {checkInNoteFinal ? (
                    <div className="text-slate-500 mt-0.5">เหตุผล: {String(checkInNoteFinal)}</div>
                  ) : null}
                </div>
                <div>
                  <div className="text-gray-500">ออกเมื่อ</div>
                  <div className="font-medium">{fmtDateTimeBE(checkOutAtFinal)}</div>
                  <div className="text-slate-600 mt-0.5">{whoOutFinal || "-"}</div>
                  {checkOutNoteFinal ? (
                    <div className="text-slate-500 mt-0.5">เหตุผล: {String(checkOutNoteFinal)}</div>
                  ) : null}
                </div>
              </div>
            </div>
          </section>

          {/* ขวา: ImageViewer */}
          <ImageViewer
            images={[...workerImageItems, ...attachmentImageItems]}
            idCardCleanPath={detail?.images?.idCardCleanPath}
            idCardStampedPath={detail?.images?.idCardStampedPath}
            idCardCleanUrl={detail?.images?.idCardCleanUrl}
            idCardStampedUrl={detail?.images?.idCardStampedUrl}
            className="lg:col-span-1"
          />
        </div>
      )}

      {!loading && !err && !data && (
        <div className="mt-6 p-8 text-center text-gray-500">
          <div className="text-lg font-medium">ไม่พบข้อมูล</div>
          <div className="text-sm mt-2">RID: {ridParam}</div>
          <button onClick={() => window.location.reload()} className="mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
            โหลดข้อมูลใหม่
          </button>
        </div>
      )}

      {/* Modal ไม่อนุมัติ */}
      {showReject && (
        <div className="fixed inset-0 z-[60] no-print">
          <div className="absolute inset-0 bg-slate-900/60 backdrop-blur-sm" onClick={()=>!decideBusy && setShowReject(false)} />
          <div className="absolute inset-0 flex items-center justify-center p-4">
            <div className="w-full max-w-md rounded-2xl bg-white shadow-2xl ring-1 ring-rose-200 animate-[fadeIn_120ms_ease-out]">
              <div className="p-6">
                <div className="flex items-start gap-3">
                  <div className="inline-flex h-12 w-12 items-center justify-center rounded-xl bg-rose-100 text-rose-700 ring-1 ring-rose-200">
                    <svg viewBox="0 0 24 24" className="h-6 w-6" fill="currentColor">
                      <path d="M18.3 5.71 12 12l6.3 6.29-1.41 1.42L10.59 13.4 4.3 19.71 2.89 18.3 9.17 12 2.89 5.71 4.3 4.29 10.59 10.6 16.89 4.29z"/>
                    </svg>
                  </div>
                  <div className="min-w-0">
                    <div className="text-lg font-semibold">เหตุผลที่ไม่อนุมัติ</div>
                    <p className="mt-1 text-slate-600">กรุณาระบุเหตุผลอย่างน้อย 1 บรรทัด</p>
                  </div>
                </div>

                <textarea
                  className="mt-4 w-full border rounded-lg p-3 text-sm resize-none h-28 focus:outline-none focus:ring-2 focus:ring-rose-300"
                  placeholder="เอกสารไม่ครบ / ต้องแนบแบบแปลน / ฯลฯ"
                  value={reason}
                  onChange={(e) => setReason(e.target.value)}
                />

                <div className="mt-5 flex gap-3">
                  <button
                    onClick={() => setShowReject(false)}
                    disabled={decideBusy}
                    className="px-3 py-2 rounded-lg border border-slate-300 hover:bg-slate-50 disabled:opacity-60"
                  >
                    ยกเลิก
                  </button>
                  <button
                    onClick={async () => { await doReject(); }}
                    disabled={decideBusy || !reason.trim()}
                    className="flex-1 px-3 py-2 rounded-lg text-white bg-rose-600 hover:bg-rose-700 disabled:bg-gray-400"
                  >
                    {decideBusy ? "กำลังบันทึก..." : "ยืนยันไม่อนุมัติ"}
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      <Toasts items={toasts} onDismiss={(id)=>setToasts(xs=>xs.filter(t=>t.id!==id))} />
    </div>
  );
}
