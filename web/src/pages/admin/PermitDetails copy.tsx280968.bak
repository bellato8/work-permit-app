// ======================================================================
// File: web/src/pages/admin/PermitDetails.tsx
// เวอร์ชัน: 2025-09-20 20:45 (TH)
// หน้าที่: หน้าแอดมินดูรายละเอียด + อนุมัติ/ไม่อนุมัติ โดยส่ง Firebase ID Token
// เชื่อม auth ผ่าน "อะแดปเตอร์ (adapter)": firebase/auth (เว็บ) → ฝั่งฟังก์ชันตรวจ verifyIdToken
// หมายเหตุ:
//   - เปลี่ยนจาก approveRequest/rejectRequest (แบบคีย์) → updateStatusApi (แนบ ID Token)
//   - Header: Authorization (ออโทไรเซชัน/ส่วนอนุญาต) = Bearer (แบร์เรอร์/ผู้ถือ) <ID Token>
//   - ยังคงโหลดรายละเอียดผ่าน GET_DETAIL_URL + approver_key เดิม (ส่วนอ่านรายละเอียด) เพื่อไม่พังของเก่า
// วันที่/เดือน/ปี เวลา: 20/09/2025 20:45 (โซนไทย)
// ======================================================================

import React, { useEffect, useMemo, useRef, useState } from "react";
import { Link, useParams } from "react-router-dom";

// ⛏️ เปลี่ยนมาใช้ตัวใหม่ที่แนบ Firebase ID Token
import { updateStatusApi } from "../../utils/updateStatus";

import { ref, getDownloadURL } from "firebase/storage";
import { storage, ensureSignedIn } from "../../lib/firebase";

// Components
import ImageViewer from "../../components/ImageViewer";

// PDF
import { useReactToPrint } from "react-to-print";

// =============== Fancy UI helpers (Modal + Toast) ===============
function classNames(...xs: (string | false | undefined)[]) {
  return xs.filter(Boolean).join(" ");
}

type ConfirmBoxProps = {
  open: boolean;
  tone?: "emerald" | "rose" | "amber" | "indigo";
  title: string;
  message?: string;
  confirmText?: string;
  cancelText?: string;
  busy?: boolean;
  onClose: () => void;
  onConfirm: () => void | Promise<void>;
};

function ConfirmBox({
  open, tone = "emerald", title, message,
  confirmText = "ยืนยัน", cancelText = "ยกเลิก",
  busy, onClose, onConfirm,
}: ConfirmBoxProps) {
  if (!open) return null;
  const toneBg: Record<string, string> = {
    emerald: "bg-emerald-100 text-emerald-700 ring-emerald-200",
    rose: "bg-rose-100 text-rose-700 ring-rose-200",
    amber: "bg-amber-100 text-amber-700 ring-amber-200",
    indigo: "bg-indigo-100 text-indigo-700 ring-indigo-200",
  };
  const toneBtn: Record<string, string> = {
    emerald: "bg-emerald-600 hover:bg-emerald-700",
    rose: "bg-rose-600 hover:bg-rose-700",
    amber: "bg-amber-600 hover:bg-amber-700",
    indigo: "bg-indigo-600 hover:bg-indigo-700",
  };
  return (
    <div className="fixed inset-0 z-[60]">
      <div className="absolute inset-0 bg-slate-900/60 backdrop-blur-sm" onClick={onClose} />
      <div className="absolute inset-0 flex items-center justify-center p-4">
        <div className="w-full max-w-md rounded-2xl bg-white shadow-2xl ring-1 ring-slate-200 animate-[fadeIn_120ms_ease-out]">
          <div className="p-6">
            <div className="flex items-start gap-3">
              <div className={classNames("inline-flex h-12 w-12 items-center justify-center rounded-xl ring-1", toneBg[tone])}>
                {/* check icon */}
                <svg viewBox="0 0 24 24" className="h-6 w-6" fill="currentColor">
                  <path d="M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z" />
                </svg>
              </div>
              <div className="min-w-0">
                <div className="text-lg font-semibold">{title}</div>
                {message && <p className="mt-1 text-slate-600">{message}</p>}
              </div>
            </div>
            <div className="mt-6 flex items-center justify-end gap-3">
              <button
                onClick={onClose}
                disabled={busy}
                className="px-3 py-2 rounded-lg border border-slate-300 hover:bg-slate-50 disabled:opacity-60"
              >
                {cancelText}
              </button>
              <button
                onClick={onConfirm}
                disabled={busy}
                className={classNames("px-3 py-2 rounded-lg text-white disabled:opacity-60", toneBtn[tone])}
              >
                {busy ? "กำลังบันทึก..." : confirmText}
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

type ToastKind = "success" | "error" | "info";
type ToastItem = { id: number; kind: ToastKind; title: string; message?: string };
function Toasts({ items, onDismiss }: { items: ToastItem[]; onDismiss: (id:number)=>void }) {
  const tone: Record<ToastKind, string> = {
    success: "border-emerald-300 bg-emerald-50 text-emerald-800",
    error:   "border-rose-300 bg-rose-50 text-rose-800",
    info:    "border-slate-300 bg-white text-slate-800",
  };
  const icon = (k: ToastKind) => k === "success" ? (
    <svg viewBox="0 0 24 24" className="h-5 w-5" fill="currentColor"><path d="M9 16.17 4.83 12l-1.42 1.41L9 19l12-12-1.41-1.41z"/></svg>
  ) : k === "error" ? (
    <svg viewBox="0 0 24 24" className="h-5 w-5" fill="currentColor"><path d="M12 2 2 22h20L12 2zm1 15h-2v-2h2v2zm0-4h-2V8h2v5z"/></svg>
  ) : (
    <svg viewBox="0 0 24 24" className="h-5 w-5" fill="currentColor"><path d="M11 7h2v2h-2zm0 4h2v6h-2z"/><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2z" fillOpacity=".15"/></svg>
  );
  return (
    <div className="fixed bottom-4 right-4 z-[70] space-y-2">
      {items.map(t => (
        <div key={t.id}
          className={classNames("w-[320px] rounded-xl border p-3 shadow-lg ring-1 ring-black/5 animate-[slideIn_140ms_ease-out]",
            tone[t.kind])}>
          <div className="flex gap-2">
            <div className="mt-0.5">{icon(t.kind)}</div>
            <div className="min-w-0">
              <div className="font-medium truncate">{t.title}</div>
              {t.message && <div className="text-sm opacity-80 truncate">{t.message}</div>}
            </div>
            <button className="ml-auto opacity-60 hover:opacity-100" onClick={()=>onDismiss(t.id)}>✕</button>
          </div>
        </div>
      ))}
    </div>
  );
}
// =============== /Fancy UI helpers ===============

// ---------- ประเภทข้อมูล ----------
type AnyRec = Record<string, any>;
type WorkerItem = {
  name?: string;
  citizenId?: string;
  isSupervisor?: boolean;
  photoPath?: string;
  photoUrl?: string;
};

// ---------- คอนฟิก (ส่วนอ่านรายละเอียดเดิม) ----------
const GET_DETAIL_URL = import.meta.env.VITE_GET_REQUEST_ADMIN_URL as string;
const APPROVER_KEY_ENV = (import.meta.env.VITE_APPROVER_KEY as string) || "";
function getApproverKey(): string {
  try {
    const k = localStorage.getItem("approver_key");
    if (k && k.trim()) return k.trim();
  } catch {}
  return APPROVER_KEY_ENV.trim();
}

// ---------- ตัวช่วยเวลา/สตริง ----------
function tsToMillis(input: any): number | undefined {
  if (!input) return undefined;
  if (typeof input === "object" && typeof input._seconds === "number") {
    return input._seconds * 1000 + Math.round((input._nanoseconds || 0) / 1e6);
  }
  if (typeof input?.seconds === "number") {
    return input.seconds * 1000 + Math.round((input.nanoseconds || 0) / 1e6);
  }
  if (typeof input === "number") return input < 2_000_000_000_000 ? input * 1000 : input;
  if (typeof input === "string") {
    const t = Date.parse(input);
    if (!Number.isNaN(t)) return t;
  }
  return undefined;
}
function fmtDateTime(input: any): string {
  const ms = tsToMillis(input);
  if (!ms) return "-";
  try {
    return new Date(ms).toLocaleString("th-TH", {
      year: "numeric",
      month: "short",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      hour12: false,
    });
  } catch {
    return "-";
  }
}
function thaiStatus(s?: string): string {
  const t = (s || "").toLowerCase();
  if (t.includes("approve")) return "อนุมัติแล้ว";
  if (t.includes("reject")) return "ไม่อนุมัติ";
  if (t.includes("return")) return "ตีกลับ/แก้ไข";
  return "รอดำเนินการ";
}
const text = (v: any): string => {
  if (v == null) return "-";
  if (typeof v === "string") return v || "-";
  try { return JSON.stringify(v); } catch { return String(v); }
};

// ---------- สกัดข้อมูล ----------
const firstOf = (obj: AnyRec | undefined, keys: string[]): string | undefined => {
  if (!obj) return undefined;
  for (const k of keys) {
    const v = obj[k];
    if (typeof v === "string" && v.trim()) return v.trim();
  }
  return undefined;
};
const toFullId = (p: AnyRec): string =>
  firstOf(p, ["citizenId", "documentId", "idNumber", "docNo", "cardNo", "id"]) ||
  p?.citizenIdMasked || p?.documentIdMasked || "-";

const sysMap: Record<string, string> = {
  electric: "ระบบไฟฟ้า",
  electricity: "ระบบไฟฟ้า",
  amp: "กำลังไฟ/แอมป์",
  lighting: "ระบบแสงสว่าง",
  hvac: "ระบบปรับอากาศ",
  air: "ระบบปรับอากาศ",
  water: "ระบบน้ำ",
  plumbing: "ระบบประปา",
  gas: "ระบบแก๊ส",
  fire: "ระบบป้องกันอัคคีภัย",
};
const normalizeSystemKey = (s: string) => s.toLowerCase().trim().replace(/[^a-z]/g, "");
const systemsToThai = (data: AnyRec | string | undefined): string => {
  if (!data) return "-";
  const out = new Set();
  if (typeof data === "string") {
    for (const raw of data.split(",")) {
      const k = normalizeSystemKey(raw);
      if (sysMap[k]) out.add(sysMap[k]);
    }
  } else if (typeof data === "object") {
    Object.entries(data).forEach(([k, v]) => {
      if (v === true || String(v).toLowerCase() === "true") {
        const key = normalizeSystemKey(k);
        if (sysMap[key]) out.add(sysMap[key]);
      }
    });
  }
  return out.size ? Array.from(out).join(", ") : "-";
};
const joinAddress = (detail?: AnyRec, requester?: AnyRec): string => {
  const fromString = typeof requester?.address === "string" ? requester?.address : "";
  const detailStr = firstOf(detail, ["detail", "address"]) || "";
  const sub = firstOf(detail, ["subdistrict", "subDistrict", "tambon"]) || "";
  const dist = firstOf(detail, ["district", "amphoe"]) || "";
  const prov = firstOf(detail, ["province"]) || "";
  const joined = [detailStr, sub, dist, prov].filter(Boolean).join(" ");
  return (joined || fromString || "-").trim();
};
function collectWorkers(data: AnyRec): WorkerItem[] {
  const arr =
    (Array.isArray(data?.workers) && data.workers) ||
    (Array.isArray(data?.team) && data.team) ||
    (Array.isArray(data?.members) && data.members) ||
    [];
  return arr
    .map((w: any) => {
      if (!w) return {};
      if (typeof w === "string") return { name: w };
      return {
        name: w.name || w.fullname || [w.firstname, w.lastname].filter(Boolean).join(" "),
        citizenId: w.citizenId || w.idCard || w.cid || w.documentId || w.idNumber || w.docNo || w.cardNo,
        isSupervisor: !!(w.isSupervisor || w.supervisor),
        photoPath: w.photoPath || w.idcardPath || w.storagePath || w.imagePath,
        photoUrl: w.photoUrl || w.imageUrl || w.avatar,
      } as WorkerItem;
    })
    .filter((x) => x && (x.name || x.citizenId || x.photoPath || x.photoUrl));
}

// ---- helper: path -> URL (พร้อม cache ง่ายๆ) ----
const urlCache = new Map<string, string>();
async function pathToUrl(path?: string, url?: string): Promise<string | null> {
  if (url && /^https?:\/\//i.test(url)) return url;
  if (!path) return null;
  if (urlCache.has(path)) return urlCache.get(path)!;
  try {
    const storageRef = ref(storage, path);
    const dl = await getDownloadURL(storageRef);
    urlCache.set(path, dl);
    return dl;
  } catch (e) {
    console.error("getDownloadURL failed:", path, e);
    return null;
  }
}

// ----------------------------- คอมโพเนนต์หลัก -----------------------------
export default function PermitDetails() {
  const params = useParams<{ rid?: string; id?: string }>();
  const ridParam = (params.rid || params.id || "").trim();

  const [loading, setLoading] = useState(false);
  const [data, setData] = useState<AnyRec | null>(null);
  const [err, setErr] = useState<string | null>(null);

  const [decideBusy, setDecideBusy] = useState(false);
  const [showReject, setShowReject] = useState(false);
  const [reason, setReason] = useState("");

  // ⛏️ Confirm & Toast states
  const [confirmBox, setConfirmBox] = useState<{
    open: boolean; tone?: "emerald" | "rose" | "amber" | "indigo";
    title: string; message?: string;
    confirmText?: string; cancelText?: string;
  }>({ open: false, title: "" });

  const [toasts, setToasts] = useState<ToastItem[]>([]);
  function pushToast(kind: ToastKind, title: string, message?: string) {
    const id = Date.now() + Math.floor(Math.random() * 1000);
    setToasts((xs) => [...xs, { id, kind, title, message }]);
    setTimeout(() => setToasts((xs) => xs.filter((t) => t.id !== id)), 3000);
  }

  // preview photos
  const [requesterPhotoUrl, setRequesterPhotoUrl] = useState<string | null>(null);
  const [workerThumbUrls, setWorkerThumbUrls] = useState<string[]>([]);

  // ---------- พื้นที่ที่จะ "พิมพ์" ----------
  const printAreaRef = useRef(null);
  const handlePrint = useReactToPrint({
    contentRef: printAreaRef,
    documentTitle: `work-permit_${ridParam || "details"}`,
    pageStyle: `
      @page { size: A4; margin: 12mm }
      html, body { -webkit-print-color-adjust: exact; print-color-adjust: exact; }
      .no-print { display: none !important; }
      a[href]:after { content: "" !important; }
    `,
    // onAfterPrint: () => {},
  });

  // โหลดรายละเอียด (คงวิธีเดิมเพื่อ compat)
  useEffect(() => {
    let alive = true;
    const controller = new AbortController();
    async function run() {
      setErr(null);
      setLoading(true);
      setData(null);

      const key = getApproverKey();
      if (!ridParam) { setErr("ไม่พบ RID ใน URL"); setLoading(false); return; }
      if (!GET_DETAIL_URL || !key) { setErr("ยังไม่ได้ตั้งค่า VITE_GET_REQUEST_ADMIN_URL หรือ approver_key"); setLoading(false); return; }

      try {
        const base = GET_DETAIL_URL.replace(/\/+$/, "");
        const url = `${base}?requestId=${encodeURIComponent(ridParam)}&apiKey=${encodeURIComponent(key)}`;
        const res = await fetch(url, { method: "GET", headers: { Accept: "application/json", "Content-Type": "application/json" }, signal: controller.signal });
        if (!res.ok) throw new Error(`HTTP ${res.status}: ${res.statusText}`);
        const json = await res.json().catch(() => ({}));
        if (!json?.success && !json?.data) throw new Error(json?.error || json?.message || `ไม่พบข้อมูล RID: ${ridParam}`);
        if (alive) setData(json.data || json);
      } catch (e: any) {
        if (!alive || e?.name === "AbortError") return;
        console.error(`[getRequestAdmin Error]`, e);
        setErr(e?.message || String(e));
      } finally {
        if (alive) setLoading(false);
      }
    }
    run();
    return () => { alive = false; controller.abort(); };
  }, [ridParam]);

  // สกัดฟิลด์เพื่อแสดงผล
  const detail = data || {};
  const w = detail?.work ?? {};
  const loc = w?.location ?? detail?.location ?? {};
  const bs = w?.buildingSystems ?? detail?.buildingSystems ?? detail?.systems ?? {};
  const req = detail?.requester ?? {};

  const systemsThai = useMemo(() => systemsToThai(bs || w?.systems || detail?.systems), [bs, w?.systems, detail?.systems]);
  const addressFull = useMemo(() => joinAddress(loc, req), [loc, req]);

  const workersRaw = useMemo(() => collectWorkers(detail), [detail]);
  const [workersResolved, setWorkersResolved] = useState<(WorkerItem & { __idFull?: string })[]>([]);
  useEffect(() => {
    const rows = workersRaw.map((p) => ({ ...p, __idFull: toFullId(p) }));
    setWorkersResolved(rows);
  }, [workersRaw]);

  const statusText = thaiStatus(detail?.status || detail?.decision?.status);

  // --- ดึง URL รูป "ผู้ขอ" และ "ผู้ร่วมงาน" ---
  useEffect(() => {
    let alive = true;
    async function resolvePreviewImages() {
      await ensureSignedIn(); // ให้ได้สิทธิ์อ่าน storage ถ้ามี rule จำกัด
      const requesterCandidates: { path?: string; url?: string }[] = [
        { path: detail?.images?.idCardStampedPath },
        { path: detail?.images?.idCardCleanPath },
        { path: req?.photoPath, url: req?.photoUrl },
      ];
      for (const c of requesterCandidates) {
        const u = await pathToUrl(c.path, c.url);
        if (u) { if (!alive) return; setRequesterPhotoUrl(u); break; }
      }
      const imgs: string[] = [];
      const imgWorkers = Array.isArray(detail?.images?.workers) ? detail.images.workers : [];
      for (let i = 0; i < workersResolved.length; i++) {
        const imgDef = imgWorkers[i] || {};
        const cands: { path?: string; url?: string }[] = [
          { path: imgDef.cleanPath }, { path: imgDef.stampedPath },
          { path: workersResolved[i]?.photoPath, url: workersResolved[i]?.photoUrl },
        ];
        let got: string | null = null;
        for (const c of cands) { got = await pathToUrl(c.path, c.url); if (got) break; }
        imgs.push(got || "");
      }
      if (!alive) return;
      const changed = imgs.length !== workerThumbUrls.length || imgs.some((u, i) => u !== workerThumbUrls[i]);
      if (changed) setWorkerThumbUrls(imgs);
    }
    if (data) resolvePreviewImages();
    return () => { alive = false; };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [data, workersResolved.length]);

  // ---------------- ปุ่มอนุมัติ/ไม่อนุมัติ (เรียก API ใหม่แนบ ID Token) ----------------
  async function doApprove() {
    const rid = (detail?.rid || detail?.requestId || detail?.id || ridParam) as string;
    if (!rid) return;
    setDecideBusy(true);
    try {
      await updateStatusApi({ rid, status: "approved" }); // ✅ ใช้ API ใหม่
      pushToast("success", "บันทึกสำเร็จ", "อนุมัติเรียบร้อย");
      setConfirmBox((c) => ({ ...c, open: false }));
      setTimeout(() => location.reload(), 700);
    } catch (e: any) {
      pushToast("error", "อนุมัติไม่สำเร็จ", e?.message || String(e));
    } finally {
      setDecideBusy(false);
    }
  }

  async function doReject() {
    if (!reason.trim()) { pushToast("info", "กรุณาระบุเหตุผล"); return; }
    const rid = (detail?.rid || detail?.requestId || detail?.id || ridParam) as string;
    if (!rid) return;
    setDecideBusy(true);
    try {
      await updateStatusApi({ rid, status: "rejected", reason: reason.trim() }); // ✅ ใช้ API ใหม่
      pushToast("success", "บันทึกสำเร็จ", "ไม่อนุมัติเรียบร้อย");
      setShowReject(false);
      setReason("");
      setTimeout(() => location.reload(), 700);
    } catch (e: any) {
      pushToast("error", "ไม่อนุมัติไม่สำเร็จ", e?.message || String(e));
    } finally {
      setDecideBusy(false);
    }
  }

  // รวมรูปที่ส่งให้ ImageViewer (worker + attachments/photos)
  const workerImageItems = useMemo(() => {
    const items: { label: string; path?: string; url?: string }[] = [];
    const arr = Array.isArray(detail?.images?.workers) ? detail.images.workers : [];
    arr.forEach((w: any, i: number) => {
      const idx = i + 1;
      if (w?.cleanPath) items.push({ label: `ผู้ร่วมงาน #${idx} (ก่อนประทับ)`, path: w.cleanPath });
      if (w?.stampedPath) items.push({ label: `ผู้ร่วมงาน #${idx} (หลังประทับ)`, path: w.stampedPath });
      if (w?.cleanUrl) items.push({ label: `ผู้ร่วมงาน #${idx} (ก่อนประทับ)`, url: w.cleanUrl });
      if (w?.stampedUrl) items.push({ label: `ผู้ร่วมงาน #${idx} (หลังประทับ)`, url: w.stampedUrl });
    });
    return items;
  }, [detail?.images?.workers]);

  const attachmentImageItems = useMemo(() => ([
    ...(detail?.attachments || []).map((att: any, i: number) => ({
      label: att.label || `ไฟล์แนบ ${i + 1}`,
      url: att.url,
      path: att.path,
    })),
    ...(detail?.photos || []).map((photo: any, i: number) => ({
      label: photo.label || `ภาพ ${i + 1}`,
      url: photo.url,
      path: photo.path,
    })),
  ]), [detail?.attachments, detail?.photos]);

  // ----------------------------- UI -----------------------------
  return (
    <div>
      {/* Header */}
      <div>
        <div>
          <h1>รายละเอียดคำขอ</h1>
          <div>RID: {detail?.rid || detail?.requestId || detail?.id || ridParam || "-"}</div>
        </div>
        <div>
          <span
            className={`px-3 py-1 rounded-full text-sm ${
              statusText === "อนุมัติแล้ว"
                ? "bg-emerald-100 text-emerald-700"
                : statusText === "ไม่อนุมัติ"
                ? "bg-rose-100 text-rose-700"
                : "bg-amber-100 text-amber-700"
            }`}
          >
            {statusText}
          </span>

          <button
            onClick={() => handlePrint()}
            disabled={!data}
            className="px-3 py-1 rounded-lg border border-gray-300 hover:bg-gray-50 text-sm"
            title={!data ? "กำลังโหลดข้อมูล..." : "บันทึกเป็น PDF"}
          >
            Export PDF
          </button>

          <Link to="/admin/permits" className="px-3 py-1 rounded-lg border border-gray-300 hover:bg-gray-50 text-sm">
            ← กลับรายการ
          </Link>
        </div>
      </div>

      {loading && (
        <div className="mt-4 p-3 rounded-lg bg-blue-50 border border-blue-200 text-blue-700">
          กำลังโหลดข้อมูลจาก getRequestAdmin API...
        </div>
      )}

      {err && (
        <div className="mt-4 p-3 rounded-lg bg-red-50 border border-red-200 text-red-700">
          <div className="font-medium">เกิดข้อผิดพลาด:</div>
          <div className="text-sm mt-1">{err}</div>
          <div className="text-xs mt-2 opacity-70">URL: {GET_DETAIL_URL}</div>
          <button onClick={() => window.location.reload()} className="mt-2 px-3 py-1 bg-red-100 hover:bg-red-200 rounded text-sm">
            ลองใหม่
          </button>
        </div>
      )}

      {/* Upgraded Reject Modal */}
      {showReject && (
        <div className="fixed inset-0 z-[60] no-print">
          <div className="absolute inset-0 bg-slate-900/60 backdrop-blur-sm" onClick={()=>!decideBusy && setShowReject(false)} />
          <div className="absolute inset-0 flex items-center justify-center p-4">
            <div className="w-full max-w-md rounded-2xl bg-white shadow-2xl ring-1 ring-rose-200 animate-[fadeIn_120ms_ease-out]">
              <div className="p-6">
                <div className="flex items-start gap-3">
                  <div className="inline-flex h-12 w-12 items-center justify-center rounded-xl bg-rose-100 text-rose-700 ring-1 ring-rose-200">
                    {/* x icon */}
                    <svg viewBox="0 0 24 24" className="h-6 w-6" fill="currentColor">
                      <path d="M18.3 5.71 12 12l6.3 6.29-1.41 1.42L10.59 13.4 4.3 19.71 2.89 18.3 9.17 12 2.89 5.71 4.3 4.29 10.59 10.6 16.89 4.29z"/>
                    </svg>
                  </div>
                  <div className="min-w-0">
                    <div className="text-lg font-semibold">เหตุผลที่ไม่อนุมัติ</div>
                    <p className="mt-1 text-slate-600">กรุณาระบุเหตุผลอย่างน้อย 1 บรรทัด</p>
                  </div>
                </div>

                <textarea
                  className="mt-4 w-full border rounded-lg p-3 text-sm resize-none h-28 focus:outline-none focus:ring-2 focus:ring-rose-300"
                  placeholder="เอกสารไม่ครบ / ต้องแนบแบบแปลน / ฯลฯ"
                  value={reason}
                  onChange={(e) => setReason(e.target.value)}
                />

                <div className="mt-5 flex gap-3">
                  <button
                    onClick={() => setShowReject(false)}
                    disabled={decideBusy}
                    className="px-3 py-2 rounded-lg border border-slate-300 hover:bg-slate-50 disabled:opacity-60"
                  >
                    ยกเลิก
                  </button>
                  <button
                    onClick={doReject}
                    disabled={decideBusy || !reason.trim()}
                    className="flex-1 px-3 py-2 rounded-lg text-white bg-rose-600 hover:bg-rose-700 disabled:bg-gray-400"
                  >
                    {decideBusy ? "กำลังบันทึก..." : "ยืนยันไม่อนุมัติ"}
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* ---- พื้นที่จะพิมพ์ ---- */}
      <div ref={printAreaRef}>
        {!loading && !err && data && statusText === "รอดำเนินการ" && (
          <div className="mt-4 flex flex-wrap items-center gap-3 no-print">
            <button
              onClick={() => {
                const rid = (detail?.rid || detail?.requestId || detail?.id || ridParam) as string;
                setConfirmBox({
                  open: true,
                  tone: "emerald",
                  title: "ยืนยันการอนุมัติ",
                  message: `คุณต้องการอนุมัติ RID: ${rid} ใช่ไหม?`,
                  confirmText: "ยืนยันอนุมัติ",
                  cancelText: "ยกเลิก",
                });
              }}
              disabled={decideBusy}
              className="inline-flex items-center gap-2 bg-emerald-600 hover:bg-emerald-700 text-white px-4 py-2 rounded-xl disabled:bg-gray-400"
            >
              {decideBusy ? "กำลังบันทึก..." : "อนุมัติ"}
            </button>
            <button onClick={() => setShowReject(true)} disabled={decideBusy} className="inline-flex items-center gap-2 bg-rose-600 hover:bg-rose-700 text-white px-4 py-2 rounded-xl disabled:bg-gray-400">
              ไม่อนุมัติ
            </button>
          </div>
        )}

        {!loading && !err && data && (
          <div className="mt-6 grid grid-cols-1 lg:grid-cols-3 gap-4">
            {/* ซ้าย: ข้อมูลหลัก */}
            <section className="lg:col-span-2 space-y-4">
              {/* 1) ผู้ยื่นคำขอ */}
              <div className="rounded-2xl border border-gray-200 bg-white p-4">
                <div className="text-base font-semibold mb-2">1) ผู้ยื่นคำขอ</div>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div className="space-y-2 text-sm">
                    <div>
                      <span className="text-slate-500">ชื่อ-นามสกุล</span>
                      <div className="font-medium">
                        {detail?.requester?.fullname || detail?.requester?.name || detail?.contractorName || detail?.requesterName || "-"}
                      </div>
                    </div>
                    <div>
                      <span className="text-slate-500">บริษัท</span>
                      <div className="font-medium">{detail?.requester?.company || detail?.company || detail?.contractorCompany || "-"}</div>
                    </div>
                    <div>
                      <span className="text-slate-500">อีเมล</span>
                      <div className="font-medium">{detail?.requester?.email || detail?.email || "-"}</div>
                    </div>
                    <div>
                      <span className="text-slate-500">เบอร์โทร</span>
                      <div className="font-medium">{detail?.requester?.phone || detail?.phone || "-"}</div>
                    </div>
                    <div>
                      <span className="text-slate-500">ที่อยู่</span>
                      <div className="font-medium">{addressFull}</div>
                    </div>
                    <div>
                      <span className="text-slate-500">เลขบัตร/เอกสาร</span>
                      <div className="font-medium">{toFullId(detail?.requester || {})}</div>
                    </div>
                  </div>
                  <div className="flex items-start justify-center">
                    <div className="w-40 h-40 rounded-xl border border-dashed border-slate-300 text-slate-400 flex items-center justify-center text-sm overflow-hidden bg-slate-50">
                      {requesterPhotoUrl ? (
                        <img
                          src={requesterPhotoUrl}
                          alt="ผู้ยื่นคำขอ"
                          className="w-full h-full object-cover"
                          loading="eager"
                          decoding="async"
                          fetchPriority="high"
                        />
                      ) : (
                        <>รูปผู้ขอ<br/>(ดูในไฟล์แนบ)</>
                      )}
                    </div>
                  </div>
                </div>
              </div>

              {/* 2) งาน/สถานที่/เวลา */}
              <div className="rounded-2xl border border-gray-200 bg-white p-4">
                <div className="text-base font-semibold mb-2">2) รายละเอียดงาน/สถานที่/เวลา</div>
                <div className="grid md:grid-cols-2 gap-2 text-sm">
                  <div>
                    <div className="text-gray-500">ประเภทงาน</div>
                    <div className="font-medium">{detail?.work?.type || detail?.jobType || detail?.workType || detail?.type || "-"}</div>
                  </div>
                  <div>
                    <div className="text-gray-500">พื้นที่ปฏิบัติงาน</div>
                    <div className="font-medium">{detail?.work?.area || detail?.area || "-"}</div>
                  </div>
                  <div>
                    <div className="text-gray-500">ชั้น/โซน</div>
                    <div className="font-medium">{detail?.work?.floor || detail?.floor || "-"}</div>
                  </div>
                  <div>
                    <div className="text-gray-500">ช่วงเวลา</div>
                    <div className="font-medium">
                      {text(detail?.work?.from || detail?.time?.start || detail?.from || detail?.startAt)} —{" "}
                      {text(detail?.work?.to || detail?.time?.end || detail?.to || detail?.endAt)}
                    </div>
                  </div>
                  <div>
                    <div className="text-gray-500">งานร้อน (Hot Work)</div>
                    <div className="font-medium">{detail?.work?.hotWork || detail?.hotWork ? "มี" : "ไม่มี"}</div>
                  </div>
                  <div>
                    <div className="text-gray-500">ระบบอาคารที่เกี่ยวข้อง</div>
                    <div className="font-medium">{systemsThai}</div>
                  </div>
                  <div className="md:col-span-2">
                    <div className="text-gray-500">อุปกรณ์นำเข้า/ออก</div>
                    <div className="font-medium">
                      {(detail?.work?.equipments?.has ? detail?.work?.equipments?.details || "มี (ไม่ได้ระบุ)" : "ไม่มี") || detail?.equipment || "-"}
                    </div>
                  </div>
                </div>
              </div>

              {/* 3) ผู้ร่วมงาน */}
              <div className="rounded-2xl border border-gray-200 bg-white p-4">
                <div className="text-base font-semibold mb-2">3) รายชื่อผู้ร่วมงาน ({workersResolved.length} คน)</div>
                {workersResolved.length === 0 ? (
                  <div className="text-sm text-gray-500">— ไม่มีข้อมูลผู้ร่วมงาน —</div>
                ) : (
                  <div className="grid md:grid-cols-2 gap-3">
                    {workersResolved.map((p, i) => (
                      <div key={i} className="flex gap-3 items-center rounded-2xl border border-slate-200/70 bg-white/60 p-3">
                        <div className="w-14 h-14 flex-shrink-0 rounded-xl border border-slate-200 overflow-hidden bg-slate-100">
                          {workerThumbUrls[i] ? (
                            <img
                              src={workerThumbUrls[i]}
                              alt={`ผู้ร่วมงาน ${p.name || ""}`}
                              className="w-full h-full object-cover"
                              loading="eager"
                              decoding="async"
                            />
                          ) : (
                            <div className="w-full h-full flex items-center justify-center text-slate-400 text-xs">
                              รูปถ่าย
                            </div>
                          )}
                        </div>
                        <div className="min-w-0">
                          <div className="font-medium truncate">{p.name || "-"}</div>
                          <div className="text-slate-500 text-sm">เลขเอกสาร: {p.__idFull || "-"}</div>
                          {p.isSupervisor && (
                            <span className="inline-block mt-1 px-2 py-0.5 rounded bg-indigo-50 text-indigo-700 text-xs">
                              ผู้ควบคุม
                            </span>
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </div>

              {/* 4) เวลา/ผู้ตัดสิน */}
              <div className="rounded-2xl border border-gray-200 bg-white p-4">
                <div className="text-base font-semibold mb-2">4) บันทึกเวลา/ผู้ตัดสิน</div>
                <div className="grid md:grid-cols-2 gap-2 text-sm">
                  <div>
                    <div className="text-gray-500">สร้างเมื่อ</div>
                    <div className="font-medium">{fmtDateTime(detail?.createdAt)}</div>
                  </div>
                  <div>
                    <div className="text-gray-500">อัปเดตล่าสุด</div>
                    <div className="font-medium">{fmtDateTime(detail?.updatedAt || detail?.decision?.at)}</div>
                  </div>
                  <div>
                    <div className="text-gray-500">ผู้ตัดสิน</div>
                    <div className="font-medium">{detail?.decision?.byEmail || detail?.approvedByEmail || detail?.rejectedByEmail || "-"}</div>
                  </div>
                  <div>
                    <div className="text-gray-500">ผลล่าสุด</div>
                    <div className="font-medium">{statusText}</div>
                  </div>
                  {(detail?.decision?.reason || detail?.rejectionReason) && (
                    <div className="md:col-span-2">
                      <div className="text-gray-500">เหตุผล</div>
                      <div className="font-medium">{detail?.decision?.reason || detail?.rejectionReason}</div>
                    </div>
                  )}
                </div>
              </div>
            </section>

            {/* ขวา: ImageViewer */}
            <ImageViewer
              images={[...workerImageItems, ...attachmentImageItems]}
              idCardCleanPath={detail?.images?.idCardCleanPath}
              idCardStampedPath={detail?.images?.idCardStampedPath}
              className="lg:col-span-1"
            />
          </div>
        )}

        {!loading && !err && !data && (
          <div className="mt-6 p-8 text-center text-gray-500">
            <div className="text-lg font-medium">ไม่พบข้อมูล</div>
            <div className="text-sm mt-2">RID: {ridParam}</div>
            <button onClick={() => window.location.reload()} className="mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
              โหลดข้อมูลใหม่
            </button>
          </div>
        )}
      </div>
      {/* ---- /พื้นที่พิมพ์ ---- */}

      <ConfirmBox
        open={confirmBox.open}
        tone={confirmBox.tone}
        title={confirmBox.title}
        message={confirmBox.message}
        confirmText={confirmBox.confirmText}
        cancelText={confirmBox.cancelText}
        busy={decideBusy}
        onClose={() => !decideBusy && setConfirmBox((c) => ({ ...c, open: false }))}
        onConfirm={doApprove}
      />

      <Toasts items={toasts} onDismiss={(id)=>setToasts(xs=>xs.filter(t=>t.id!==id))} />
    </div>
  );
}
