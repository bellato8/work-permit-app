// ======================================================================
// File: scripts/seedLocations.js
// ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• locations ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏ô Firebase Emulator
// ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ: node scripts/seedLocations.js
// ======================================================================

const admin = require('firebase-admin');
const { v4: uuid } = require('uuid');

// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Firebase Admin SDK ‡∏Å‡∏±‡∏ö Emulator
process.env.FIRESTORE_EMULATOR_HOST = 'localhost:8080';

admin.initializeApp({ projectId: 'work-permit-app-1e9f0' });
const db = admin.firestore();

const APP_ID = 'work-permit-app-1e9f0';
const LOCATIONS_PATH = `artifacts/${APP_ID}/public/data/locations`;

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á (‡∏ï‡∏≤‡∏°‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏ö)
const sampleLocations = [
  {
    name: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ A',
    floors: [
      { id: uuid(), name: 'G', isActive: true },
      { id: uuid(), name: '1', isActive: true },
      { id: uuid(), name: '2', isActive: true },
      { id: uuid(), name: 'M', isActive: true }
    ],
    isActive: true
  },
  {
    name: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ B',
    floors: [
      { id: uuid(), name: 'G', isActive: true },
      { id: uuid(), name: '1', isActive: true },
      { id: uuid(), name: '2', isActive: true },
      { id: uuid(), name: '3', isActive: true }
    ],
    isActive: true
  },
  {
    name: '‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏≠‡∏¥‡πÄ‡∏ß‡∏ô‡∏ó‡πå',
    floors: [
      { id: uuid(), name: 'G', isActive: true },
      { id: uuid(), name: '1', isActive: true }
    ],
    isActive: true
  },
  {
    name: '‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ',
    floors: [
      { id: uuid(), name: 'B1', isActive: true },
      { id: uuid(), name: 'B2', isActive: true }
    ],
    isActive: true
  },
  {
    name: '‡πÇ‡∏ã‡∏ô Food Court',
    floors: [
      { id: uuid(), name: 'G', isActive: true }
    ],
    isActive: false // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
  }
];

async function seedLocations() {
  try {
    console.log(`üå± ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• locations ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á...`);
    console.log(`üìÇ Path: ${LOCATIONS_PATH}\n`);

    const batch = db.batch();
    const collectionRef = db.collection(LOCATIONS_PATH);

    for (const location of sampleLocations) {
      const docRef = collectionRef.doc();
      batch.set(docRef, {
        ...location,
        createdAt: admin.firestore.FieldValue.serverTimestamp(),
        updatedAt: admin.firestore.FieldValue.serverTimestamp()
      });

      const floorsText = location.floors.map(f => f.name).join(', ');
      const statusIcon = location.isActive ? '‚úÖ' : '‚ùå';
      console.log(`  ${statusIcon} ${location.name} (‡∏ä‡∏±‡πâ‡∏ô: ${floorsText})`);
    }

    await batch.commit();

    console.log(`\n‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ${sampleLocations.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`);
    console.log(`\nüí° ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: http://localhost:4000/firestore`);
    console.log(`   ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤: http://localhost:5173/admin/lp/locations`);

    process.exit(0);
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
    process.exit(1);
  }
}

seedLocations();
