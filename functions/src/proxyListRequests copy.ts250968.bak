/**
 * ======================================================================
 * File: functions/src/proxyListRequests.ts
 * Purpose: Proxy กัน CORS สำหรับดึงรายการคำขอ (list requests)
 * How it works:
 *   - รับคำขอจากเว็บ (GET/OPTIONS)
 *   - เพิ่ม header จำเป็น (x-api-key, x-requester-email) ฝั่งเซิร์ฟเวอร์
 *   - ยิงต่อไปยังปลายทางจริงด้วย POST (หรือปรับเป็น GET ได้ถ้าต้องการ)
 *   - ส่งผลกลับพร้อม CORS headers ครบ
 *
 * Env (set in Firebase/Cloud Run):
 *   - LIST_REQUESTS_TARGET = https://listrequests-xxxx.a.run.app
 *   - APPROVER_KEY        = apl-2025    (หรือ key จริงในโปรดักชัน)
 *   - DEFAULT_REQUESTER   = asm.sutthirak@gmail.com
 *
 * Note:
 *   - จำกัดเป้าหมายเฉพาะตัวแปรแวดล้อม ปลอดภัยกว่า open-proxy
 *   - รองรับ preflight (OPTIONS) เสมอ
 * ======================================================================
 */
import { onRequest } from "firebase-functions/v2/https";

const ALLOWED_ORIGINS = [/^https?:\/\/localhost:\d+$/, /imperialworld\.asia$/, /staging\.imperialworld\.asia$/];

function corsHeaders(origin: string | undefined) {
  const allowed =
    origin &&
    ALLOWED_ORIGINS.some((re) => {
      try {
        const u = new URL(origin);
        return re.test(u.host) || re.test(origin);
      } catch {
        return re.test(origin);
      }
    });

  const o = allowed ? origin! : "*";
  return {
    "Access-Control-Allow-Origin": o,
    "Access-Control-Allow-Methods": "GET,POST,OPTIONS",
    // อนุญาต header ฝั่งเบราว์เซอร์พื้นฐาน (เราไม่บังคับ header แปลก)
    "Access-Control-Allow-Headers": "Content-Type, Accept",
    "Access-Control-Max-Age": "86400",
  };
}

export const proxyListRequests = onRequest(
  { region: "asia-southeast1", cors: false }, // เราจะใส่ header เอง
  async (req, res) => {
    const headers = corsHeaders(req.headers.origin);
    if (req.method === "OPTIONS") {
      res.set(headers).status(204).send("");
      return;
    }

    try {
      const target = process.env.LIST_REQUESTS_TARGET;
      const key = process.env.APPROVER_KEY || "";
      const defaultRequester = process.env.DEFAULT_REQUESTER || "dashboard@imperialworld.asia";

      if (!target) {
        res.set(headers).status(500).json({ ok: false, error: "Missing LIST_REQUESTS_TARGET" });
        return;
      }

      // รับพารามิเตอร์จากเว็บ (เช่น limit)
      const limit = String(req.query.limit ?? "1000");
      const requester = String(req.query.requester ?? defaultRequester);

      // ยิงต่อไปปลายทางด้วย POST + headers (หลบ CORS)
      const url = new URL(target);
      url.searchParams.set("limit", limit);

      const r = await fetch(url.toString(), {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "x-api-key": key,
          "x-requester-email": requester,
        },
        body: JSON.stringify({ limit: Number(limit) }),
      });

      const text = await r.text();
      const contentType = r.headers.get("content-type") || "application/json; charset=utf-8";

      res.set({ ...headers, "Content-Type": contentType });
      res.status(r.status).send(text);
    } catch (e: any) {
      res.set(headers).status(500).json({ ok: false, error: String(e?.message || e) });
    }
  }
);
